using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using SensorShare;
using SensorShare.Desktop;

namespace SensorShare.Desktop
{
    public partial class AnnotationViewPanel : Panel
    {
        DateTime annotationTime;
        Annotation annotation;
        Boolean showData = false;

        public AnnotationViewPanel()
        {
            InitializeComponent();
            updateDel = new UpdateDelegate(DoUpdate);
            this.Height = timeLabel.Height;
            this.pictureBox.Width = this.Width;
            this.textLabel.Width = this.Width;
        }

        public DateTime AnnotationTime
        {
            set
            { 
                annotationTime = value;
                DoUpdateInvoke();
            }
            get { return annotationTime; }
        }

        public Boolean ShowData
        {
            get { return showData; }
            set
            {
                showData = value;
                DoUpdateInvoke();
            }
        }


        public Annotation Annotation
        {
            set
            {
                annotation = value;
                showData = (annotation != null);
                DoUpdateInvoke();
            }
            get { return annotation; }
        }
        protected delegate void UpdateDelegate();
        UpdateDelegate updateDel;

        protected void DoUpdateInvoke()
        {
            if (this.InvokeRequired)
            {
                this.BeginInvoke(updateDel);
            }
            else
            {
                DoUpdate();
            }
        }

        protected void DoUpdate()
        {
            if (annotation == null)
            {
                button1.Visible = false;
            }
            else
            {
                button1.Visible = true;
            }
            if (showData == true)
            {
                button1.Text = "Hide";
                timeLabel.Text = annotation.Time.ToLocalTime().ToLongTimeString();            
                this.timeLabel.Visible = true;
                this.pictureBox.Image = annotation.Picture.GetThumbnail(pictureBox.Size);
                this.pictureBox.Visible = true;
                this.textLabel.Text = SensorShareConfig.TextEncoding.GetString(annotation.Text);
                this.textLabel.Visible = true;
                this.Height = timeLabel.Height + pictureBox.Height + textLabel.Height;
            }
            else
            {
                button1.Text = "Show";
                timeLabel.Text = annotationTime.ToLocalTime().ToLongTimeString();
                this.timeLabel.Visible = true;
                this.pictureBox.Visible = false;
                this.textLabel.Visible = false;
                this.Height = timeLabel.Height;
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            showData = !showData;
            DoUpdateInvoke();
        }

        private void AnnotationViewPanel_Resize(object sender, EventArgs e)
        {
            this.pictureBox.Width = this.Width;
            this.textLabel.Width = this.Width;
        }

        private void pictureBox_Click(object sender, EventArgs e)
        {
            ImageViewForm imageForm = new ImageViewForm(this.annotation.Picture);
            imageForm.ShowDialog();
            imageForm.Dispose();
        }
    }
}
