<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsMobile.PocketOutlook</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Account">
            <summary>
            Defines a generic messaging account. This is the base class for EmailAccount and SmsAccount.
            <remarks>
            Normally you would not work with this class directly. You would use one of the derived classes instead, which provide access to the folders and messages they contain.
            A message store serves as a local archive for storing messages on Windows Mobile devices. One message store is present for each messaging account, and each messaging account is associated with one message transport. For example, you might use a Pocket PC to service three POP3 e-mail accounts. In this scenario, you might have four message stores: one for Outlook e-mail transferred through ActiveSync, two for Outlook e-mail transferred via POP3, and one for text messages transferred via SMS.
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Account.#ctor(System.IntPtr,Microsoft.WindowsMobile.PocketOutlook.ItemId,Microsoft.WindowsMobile.PocketOutlook.MailStore)">
            <summary>
            Initializes a new instance of the Account class with the specified account pointer, account ID, and mail store. 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Account.Finalize">
            <summary>
            The Account class destructor. Disposes an Account by calling this.Dispose(false).
            This method overrides System.Object.Finalize. Application code should not call this method; an object's Finalize method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the GC.SuppressFinalize method. 
            For more information, see cpconFinalizeMethodscDestructors, cpconCleaningUpUnmanagedResources, and cpconOverridingFinalizeMethod.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Account.Dispose">
            <summary>
            Disposes an Account. Disables finalization by the garbage collector by a calling GC.SuppressFinalize(this). 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Account.Dispose(System.Boolean)">
            <summary>
            Invalidates the Account, and releases its COM pointer.
            </summary>
            <remarks>
            The parentStore disposes of itself automatically.
            Throws an exception if the Account has already been disposed of.
            </remarks>
            <param name="disposing">
            Must be TRUE if called from the Dispose() method.
            </param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Account.IsValid">
            <summary>
            Gets or sets a value indicating whether the current Account can be used. FALSE if the Account has beed deleted or is no longer valid.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Account.Disposed">
            <summary>
            Gets or sets a value indicating whether this Account has been disposed of.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Account.Name">
            <summary>
            Gets the name of the Account.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Account.Id">
            <summary>
            Gets the Account ID.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField">
            <summary>
            Possible account fields that can be used with conditions
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField.DisplayName">
            <summary>
            The display name of the account
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField.TransportName">
            <summary>
            The transport name of the account
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition">
            <summary>
            Condition based on the type of the account the message belongs to
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition">
            <summary>
            Defines the comparison value and comparison type used for the filter criteria in message interception.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.#ctor">
            <summary>
            Initializes a new instance of the <b>MessagingCondition</b> class. The default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <b>MessagingCondition</b> class; using a comparison string, the comparison type, and a value indicating whether the match is case sensitive.
            </summary>
            <param name="comparisonType">The matching operation to use.</param>
            <param name="caseSensitive">Whether the match is case sensitive.</param>
            <param name="comparisonValue">The comparison string to match.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.OnChange">
            <summary>
            This method is required in order to let derived classes call OnChangeHandler.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.Register(System.IntPtr)">
            <summary>
            This method does the actual registration for this object
            </summary>
            <param name="key">key to register under</param>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.OnChangeHandler">
            <summary>
            Raised when the Condition is changed.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.ComparisonType">
            <summary>
            Gets and sets the message property comparison type. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.CaseSensitive">
            <summary>
            Gets and sets a value indicating whether the comparison is case sensitive.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.ComparisonValue">
            <summary>
            Gets and sets the message property filter criteria.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition.#ctor">
            <summary>
            Default constructor.
            Default Field is "DisplayName"
            Defaults to case sensitive, "Equal" operation
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField,System.String)">
            <summary>
            Constructs an AccountCondition used to define a condition operation on Account type.
            This constructor defines a "Contains" **for consistency**, case sensitive condition
            </summary>
            <param name="field">Field to apply the comparison to</param>
            <param name="match">string to match in account type</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField,Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType,System.String)">
            <summary>
            Constructs an AccountCondition used to define a condition operation on Account type.
            </summary>
            <param name="field">Field to apply the comparison to</param>
            <param name="comparisonType">Type of match operation to use</param>
            <param name="match">string to match in account type</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField,Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType,System.String,System.Boolean)">
            <summary>
            Constructs an AccountCondition used to define a condition operation on Account type.
            </summary>
            <param name="field">Field to apply the comparison to</param>
            <param name="comparisonType">Type of match operation to use</param>
            <param name="match">string to match in account type</param>
            <param name="caseSensitive">case sensitive or not</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition.Field">
            <summary>
            Account Field to apply the condition on.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Sensitivity">
            <summary>
            Specifies the sensitivity level assigned to Appointment and Task items. The default value is Normal.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Sensitivity.Normal">
            <summary>
            The normal sensitivity level.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Sensitivity.Personal">
            <summary>
            The personal sensitivity level. 
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Sensitivity.Private">
            <summary>
            The private sensitivity level. 
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Sensitivity.Confidential">
            <summary>
            The confidential sensitivity level. 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.BusyStatus">
            <summary>
            Specifies a Contact's availability in the period of time spanned by an Appointment or Meeting. The default value is Busy.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.BusyStatus.Free">
            <summary>
            The time-slot remains available for additonal scheduling requests. The Appointment will not conflict with another one that is scheduled for the same time-slot.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.BusyStatus.Tentative">
            <summary>
            The time-slot remains available for additonal scheduling requests, but there is a chance that it will become unavailable (change to Busy). The Appointment will not conflict with another one that is scheduled for the same time-slot.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.BusyStatus.Busy">
            <summary>
            The Busy status shows as busy. The time-slot is reserved, and therefore is unavailable for additonal scheduling. The Appointment will conflict with any other Appointment that is scheduled for the same time-slot.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.BusyStatus.OutOfOffice">
            <summary>
            The time-slot is unavailable for any and all scheduling requests. This flag is used to indicate that a Contact will be unavailable for an extended period of time, and will not be accepting Meeting requests. The Appointment will conflict with another one that is scheduled for any time-slot that is spanned by this Appointment.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus">
            <summary>
            Specifies whether an Appointment is a Meeting, and if so, specifies its status. The default value is NotMeeting (just an Appointment).
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus.NotMeeting">
            <summary>
            The Appointment is not a Meeting. It was created and saved without sending it to one or more Recipients.
            </summary>
            <value>0</value>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus.Meeting">
            <summary>
            The Appointment is a Meeting. It was created and sent to one or more Recipients.
            </summary>
            <value>1</value>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus.MeetingAccepted">
            <summary>
            The Appointment is a Meeting. The user has accepted the meeting request.
            </summary>
            <value>3</value>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus.MeetingCanceled">
            <summary>
            The Appointment is a Meeting, but it was cancelled by the meeting organizer.
            </summary>
            <value>7</value>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Appointment">
            <summary>
            Defines an Appointment item in the Appointment collection. Appointments are blocks of time that appear in the Outlook calendar. They can have beginning and ending times, can repeat, can have a location; and become Meetings when scheduled (sent) to recipients (Contacts).
            </summary>
            <remarks>
            An <b>Appointment</b> is a specialized <b>PimItem</b>. Use the <b>AppoitmentCollection</b> to add and retrieve Appointments to and from the Appointment (Calendar) folder.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimItem">
            <summary>
            Defines information about each PIM item in the Outlook session, such as the ItemID property that uniquely identifies PimItems.
            </summary>
            <remarks>
            The Appointment, Task, and Contact classes are based on this class.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItem.#ctor(Microsoft.WindowsMobile.PocketOutlook.ItemId,Microsoft.WindowsMobile.PocketOutlook.FolderType)">
            <summary>
            Creates a new PimItem using the ID of an existing PIM item, along with its folder type.
            </summary>
            <param name="itemId">Identifier of the item to be retrieved</param>
            <param name="itemExpectedType">The type of item that should be constructed.</param>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when there is an error getting the PimItem type.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the ItemId is not of the expected type.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItem.Finalize">
            <summary>
            The PimItem class destructor.
            </summary>
            <remarks>
            Disposes an PimItem object by calling this.Dispose(false). This method overrides System.Object.Finalize.
            <para>Application code should not call this method; an object's Finalize method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the GC.SuppressFinalize method.</para>
            <para>For more information, see <see>cpconFinalizeMethodscDestructors</see>, <see>cpconCleaningUpUnmanagedResources</see>, and <see>cpconOverridingFinalizeMethod</see>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItem.ShowDialog">
            <summary>
            Opens the PIM item’s standard summary card.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItem.Update">
            <summary>
            Updates the PIM item store by saving changes made to a PIM item.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">The item has not been added to a folder.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItem.Delete(System.Int32)">
            <summary>
            Occurs when the PIM item was deleted.
            </summary>
            <param name="index">index of the item that was deleted.</param>
            <remarks>
            Does not actually delete the item though.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItem.Properties">
            <summary>
            Gets the PimPropertySet. This object is used for creating custom PIM item properties.
            </summary>
            <example>
            You can use Properties to access information on the PimItem or its folder.
            In this example, a few properties in a contact are set, and then some properties
            are read.
            <code>
            using (OutlookSession mySession = new OutlookSession())
            {
              // Create a contact in the Business Category.
              Contact myContact = new Contact();
              myContact.Properties[ContactProperty.FirstName] = "Eric";
              myContact.Properties[ContactProperty.LastName] = "Parkinson";
              myContact.Properties[ContactProperty.Categories] = "Business";
              mySession.Contacts.Items.Add(myContact);
            
              // Get the contact's first name.
              string contactFirstName = myContact.Properties[ContactProperty.FirstName].ToString();
                           
              // Get the contact's categories, in this case "Business".
              string contactCategory = myContact.Properties[ContactProperty.Categories].ToString();
                    
              // Get the contacts folder categories.
              // This will include all the categories in the contacts folder.
              string contactFolderCategories = myContact.Properties[ContactProperty.FolderCategories].ToString();
            }
            </code>
            </example>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItem.ItemId">
            <summary>
            Gets the PIM item’s ID.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimItem.PimItemState">
            <summary>
            Enumeration that will be used if we want to place restrictions on the operations that can be made according to the way a message was intercepted.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.PimItem.PimItemState.NotYetAdded">
            <summary>
            Not yet added to the collection. (Created like new Contact())
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.PimItem.PimItemState.Added">
            <summary>
            The item has already been added to the collection or was in the collection to start with. (i.e. contactCollection[3]);
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.PimItem.PimItemState.Deleted">
            <summary>
            The Item has been deleted and is not usable anymore.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.#ctor">
            <summary>
            Initializes a new instance of the Appointment class.
            </summary>
            <remarks>A new Appointment is created in a specified Folder. You must later add the Appointment to a collection using AppointmentCollection.Add().
            </remarks>
            <example>
            OutlookSession s;
            using (s = new OutlookSession()) 
            {
                Appointment a = new Appointment();
                // Set properties on "a" here.
                s.Appointments.Items.Add(a);
                a.Update();
            }
            </example>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.#ctor(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Initializes a new instance of the Appointment class that references the item ID of an existing Appointment item.
            <remarks>
            An exception is thrown if the item ID does not belong to an Appointment.
            </remarks>
            </summary>
            <param name="itemId">The ItemID of an existing Appointment item.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Update">
            <summary>
            Updates the Appointment by saving the changes made to it.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">The appointment has not been added to a folder.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Delete">
            <summary>
            Deletes an Appointment item by removing it from the Appointment collection.
            </summary>
            
            <remarks>
            <b>Delete</b> throws a <b>Win32Exception</b> if the  delete operation is not successful.
            For example, this can happen when deleting a <b>Appointment</b> item that has not been 
            added to the <see cref="T:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Send">
            <summary>
            Sends (e-mails) a Meeting request to one or more Recipients.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Cancel">
            <summary>
            Cancels a Meeting. Removes the Meeting from the calendar.
            <remarks>
            Cancel is available only if MeetingStatus is set to Meeting.
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Copy">
            <summary>
            Creates a copy of the current Appointment in the Appointment collection.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when the appointment has not been added to the collection before calling the Copy method.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.ToString">
            <summary>
            Gets the subject of an Appointment.
            </summary>
            <returns>The subject of the Appointment.</returns>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.SubjectChanged">
            <summary>
            Occurs when an Appointment's Subject changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.LocationChanged">
            <summary>
            Occurs when an Appointment's Location changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.CategoriesChanged">
            <summary>
            Occurs when an Appointment's Categories change.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.AllDayEventChanged">
            <summary>
            Occurs when an Appointment's AllDayEvent property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.SensitivityChanged">
            <summary>
            Occurs when an Appointment's Sensitivity changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.BusyStatusChanged">
            <summary>
            Occurs when an Appointment's BusyStatus property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.BodyChanged">
            <summary>
            Occurs when an Appointment's Notes change.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.DurationChanged">
            <summary>
            Occurs when an Appointment's Duration changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderSetChanged">
            <summary>
            Occurs when an Appointment's ReminderSet property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderLedChanged">
            <summary>
            Occurs when an Appointment's ReminderLed property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderVibrateChanged">
            <summary>
            Occurs when an Appointment's ReminderVibrate property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderDialogChanged">
            <summary>
            Occurs when an Appointment's ReminderDialog property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderSoundChanged">
            <summary>
            Occurs when an Appointment's ReminderSound property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderRepeatChanged">
            <summary>
            Occurs when an Appointment's ReminderRepeat property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderSoundFileChanged">
            <summary>
            Occurs when an Appointment's ReminderSoundFile property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderMinutesBeforeStartChanged">
            <summary>
            Occurs when an Appointment's ReminderMinutesBeforeStart property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.StartChanged">
            <summary>
            Occurs when an Appointment's Start changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.EndChanged">
            <summary>
            Occurs when an Appointment's End changes.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.Subject">
            <summary>
            Gets or sets an Appointment's subject line. This string is limited to 4096 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.Body">
            <summary>
            Gets or sets an Appointment's text Notes. The maximum size is 20 KB.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.Location">
            <summary>
            Gets or sets an Appointment's location. This string is limited to 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.Categories">
            <summary>
            Gets or sets an Appointment's categories. This string is limited to 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.AllDayEvent">
            <summary>
            Gets or sets a value indicating whether an Appointment occurs as an all day event.  By default, Appointments occur at a particular point in the day.
            <remarks>
            An all day event Appointment cannot be a Meeting.
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.IsRecurring">
            <summary>
            Gets a value indicating whether an Appointment is recurring.
            <remarks>
            <seealso cref="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.Restrict(System.String)"/>
            This information can be useful in building a restriction string. For more information, see <see cref="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.Restrict(System.String)"/>.
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderSet">
            <summary>
            Gets or sets a value indicating whether a reminder dialog box appears to remind the user of an upcoming Appointment.
            <remarks>
            The default value is set by the user in the Calendar and Task options.
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.MeetingStatus">
            <summary>
            Gets a value indicating whether an Appointment is a Meeting. The MeetingStatus enumeration defines the possible values. The default value is NotMeeting.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus"/> enumeration defines the possible values.
            The default value is <b>NotMeeting</b>.
            <p><b>MeetingStatus</b> is a read-only property. Some operations change its value internally. For example,
            adding a <see cref="T:Microsoft.WindowsMobile.PocketOutlook.Recipient"/> changes an Appointment's <b>MeetingStatus</b> from <b>NotMeeting</b> to <b>Meeting</b>; 
            however, canceling a meeting does not change the <b>MeetingStatus</b> to <b>MeetingCanceled</b>.</p>
            <p>A user can still change an Appointment's <b>MeetingStatus</b> property manually, 
            using the techniques in the following code example.</p>
            </remarks>
            <example> This sample demonstrates two ways to change an Appointment's <b>MeetingStatus</b> property.
            <code>
            appt.Properties[AppointmentProperty.MeetingStatus] = (UInt32)MeetingStatus.MeetingAccepted;
            appt.Properties["MeetingStatus"] = (UInt32)MeetingStatus.MeetingAccepted;
            </code>
            </example>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.Sensitivity">
            <summary>
            Gets or sets an Appointment's sensitivity. The Sensitivity enumeration defines the possible values. The default value is Normal.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.BusyStatus">
            <summary>
            Gets or sets a Contact's availability in the time period spanned by an Appointment or Meeting. The BusyStatus enumeration defines the possible values. The default value is Busy.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderSoundFile">
            <summary>
            Gets or sets the fully qualified path name of the audio file that Pocket Outlook plays as the Appointment reminder. This property is valid only if the ReminderSet property is TRUE, and if the ReminderOptions property includes Sound. This property defaults to the current setting in Calendar options, but if no audio file is specified, then it defaults to Alarm1.wav. The maximum length of the the fully qualified path name is 255 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderMinutesBeforeStart">
            <summary>
            Gets or sets the number of minutes a reminder alarm occurs before the start of an Appointment. This property defaults to the current setting in Calendar options.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.Start">
            <summary>
            Gets or sets the Appointment's start time. This System.DateTime value must be less than or equal to the Appointment's end time.
            <remarks>
            Time values must be between 1/1/1900 and 12/31/2999 inclusive. The default start time is always the top of the next hour. For example, if the current time was 10:37 AM, then the default start time would be 11:00 AM.
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.End">
            <summary>
            Gets or sets the Appointment's end time. This System.DateTime value must be greater than or equal to the Appointment's start time.
            <remarks>
            Time values must be between 1/1/1900 and 12/31/2999 inclusive.
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderLed">
            <summary>
            Gets or sets a value indicating whether Pocket Outlook uses the mobile device's notification light-emitting diode (LED) to remind the user of an upcoming Appointment.
            <remarks>
            The LED flashes green once every second to remind the user of an upcoming Appointment.
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderVibrate">
            <summary>
            Gets or sets a value indicating whether Pocket Outlook uses the mobile device's built-in vibrator to remind the user of an upcoming Appointment.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderDialog">
            <summary>
            Gets or sets a value indicating whether a reminder dialog box appears to remind the user of an upcoming Appointment.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderSound">
            <summary>
            Gets or sets a value indicating whether Pocket Outlook plays the Appointment reminder audio file to remind the user of an upcoming Appointment.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.ReminderRepeat">
            <summary>
            Gets or sets a value indicating whether the Appointment reminder sound file repeats until the user dismisses the reminder.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.Duration">
            <summary>
            Gets or sets the length of an Appointment. This is a System.TimeSpan object.
            <remarks>
            The maximum duration is 31 days. The default duration is one hour.
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.Recipients">
            <summary>
            Gets the collection of Recipients for a Meeting. The RecipientCollection object is available only if IsMeeting is TRUE.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Appointment.RecurrencePattern">
            <summary>
            Gets an Appointment's recurrence pattern. A recurrence pattern defines when and how often an Appointment repeats (for example, every Monday at 9:00 AM).
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection">
            <summary>
            Represents the collection of Appointment items in an Appointment (Calendar) folder.
            <seealso cref="T:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection"/>
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection">
            <summary>
            Defines container operations (for example, adding, removing, and sorting items), along with state information (for example, references to the containing folder, whether the collection is sorted, etc.) about generic PIM item collections.
            </summary>
            <remarks>
            This is the base class for Appointment, Task, and Contact collections.
            <para>The PimItemCollection class provides methods for adding and removing PimItem objects to or from a collection, searching for items within a collection, and sorting collection items. It contains methods for indexing into a collection, information about the number of items in a collection, and whether or not you can add or remove items to or from a collection.</para>
            <para>The Pocket Outlook object model parallels the desktop Outlook object model by grouping PimItem objects into folders, but folders are actually implemented as collections. For example, the ContactFolder object has an Item property, and the accessor for this property returns a ContactCollection object, not a PimItem object.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.SealCollection">
            <summary>
            Seals the collection, this is needed when a custom Collection is returned. (i.e. Restricted collection)
            Natively it is not possible to just add to an ICollection.
            All that can be done is Saving and Filtering.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.AddNew">
            <summary>
            Adds a new PIM item to the collection.
            </summary>
            <returns>The item added to the list.</returns>
            <exception cref="T:System.NotSupportedException">This property is not supported.</exception>
            <remarks>This method is supported only if AllowNew is true; otherwise, a NotSupportedException is thrown.
            Implementing this method means that the IBindingList list must understand the type of objects 
            to add to the list and must understand how to create a new instance of that type. 
            For example, if you have a collection of myCustomer objects, the AddNew method should add 
            a new myCustomer object to the list.
            The base is used to throw a generic message when AllowNew is false.
            </remarks>        
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Finalize">
            <summary>
            The PimItemCollection class destructor.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Restrict(System.String)">
            <summary>
            Creates a new PIM item collection that contains only PIM items that match a set of filter criteria. This provides a filtered view of a collection of PIM items.
            </summary>
            <param name="restriction">
            A string that defines which items to find. 
            This string must contain a Boolean expression that evaluates to either TRUE or FALSE for any item. 
                   - Enclose property names between brackets. 
                   - You can combine expressions with AND and OR. 
                   - Comparison operators are the following &quot;&lt;, &lt;=, &gt;, &gt;=, =, &lt;&gt;&quot;
            </param>
            <remarks>
            A restriction match requires that the item include a value for the property. For example, if you do not set the e-mail address for a contact, the contact will not be found using the restriction string [Email1Address]&lt;&gt;me@microsoft.com, even though the value of Email1Address is not &quot; me@microsoft.com.&quot;
            </remarks>
            <example>
            In this example, myRestrictedCollection contains Appointments that occur only on 8/22/2001.
            <code>
               AppointmentCollection c = myOutlookSession.Appointments.Items;
               AppointmentCollection myRestrictedCollection = c.Restrict("[StartDate] &gt;= 8/22/2001 0:0 AND [StartDate] &lt;= 8/23/2001 0:0");
            </code>
            </example>
            <returns>The collection of PIM items matching the restriction.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Sort(System.String,System.Boolean)">
            <summary>
            Sorts the PIM items in a collection based on one of the PimItem properties. You can specify either an ascending or a descending sort order.
            </summary>
            <param name="propertyName">The name of the property to sort on. For example:
            <code>myItemCollection.Sort("Subject", true);</code>
            </param>
            <param name="descending">true to sort in descending order, false otherwise.</param>
            <returns>true if the sort was successful; otherwise false.</returns>
            <remarks>
            The Sort method is supported if SupportsSorting is true; otherwise, this method throws a NotSupportedException.
            </remarks>
            <exception cref="T:System.NotSupportedException">Sort is not supported.</exception>
            <exception cref="T:System.ArgumentNullException">propertyName is null.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the PIM item from the collection, at the specified index position.
            </summary>
            <remarks>
            Both <b>RemoveAt</b> and <see cref="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Remove(Microsoft.WindowsMobile.PocketOutlook.PimItem)"/> throw a <b>NotSupportedException</b> exception 
            if <see cref="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.AllowRemove"/> is <i>false</i>.
            </remarks>
            <param name="index">Index in which the item is removed.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Insert(System.Int32,Microsoft.WindowsMobile.PocketOutlook.PimItem)">
            <summary>
            Not supported.
            </summary>
            <param name="index">Where in the collection to insert the PimItem.</param>
            <param name="value">The PimItem to be inserted.</param>
            <remarks>This method is Not Supported</remarks>
            <exception cref="T:System.NotSupportedException">This method is not supported.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Remove(Microsoft.WindowsMobile.PocketOutlook.PimItem)">
            <summary>
            Removes a PIM item from the collection, based on the current sort order.
            </summary>
            <remarks>
            Both <b>Remove</b> and <see cref="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.RemoveAt(System.Int32)"/> throw a <b>NotSupportedException</b> exception 
            if <see cref="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.AllowRemove"/> is <i>false</i>.
            </remarks>
            <param name="value">The PIM item to be removed from the collection.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Contains(Microsoft.WindowsMobile.PocketOutlook.PimItem)">
            <summary>
            Gets a value indicating whether a specific PIM item exists in the collection.
            </summary>
            <param name="value">The PimItem to be found.</param>
            <returns>True if the item is found in the collection. False if the item is not found in the collection.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Clear">
            <summary>
            Deletes all PIM items from the collection.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.IndexOf(Microsoft.WindowsMobile.PocketOutlook.PimItem)">
            <summary>
            Gets a PIM item’s position in the collection.
            </summary>
            <remarks>
            Strongly typed.
            </remarks>
            <param name="value">The PimItem to find the index of.</param>        
            <returns>The index of the PimItem if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Add(Microsoft.WindowsMobile.PocketOutlook.PimItem)">
            <summary>
            Creates and inserts a new PIM item into the collection.
            </summary>
            <param name="value">The item to be added.</param>
            <returns>The position into which the new item was inserted</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Add(Microsoft.WindowsMobile.PocketOutlook.PimItem,Microsoft.WindowsMobile.PocketOutlook.FolderType)">
            <summary>
            Creates a new item for a folder in the Items collection. The item type depends on the folder type.
            </summary>
            <returns>The position into which the new item was inserted</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.CopyTo(Microsoft.WindowsMobile.PocketOutlook.PimItem[],System.Int32)">
            <summary>
            Copies all PIM items in the collection into a PimItem array, beginning at the specified array index.
            </summary>
            <param name="array">The array of items to fill</param>
            <param name="index">The starting position.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The index parameter is less than zero. </exception>
            <exception cref="T:System.ArgumentException">The index parameter is greater than or equal to the length of the array parameter. Can also be thrown if the number of elements in the source array is greater than the available space from index to the end of the destination array.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all PIM items in the collection into a generic array, beginning at the specified array index.
            </summary>
            <param name="array">The array of items to fill</param>
            <param name="index">The starting position.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The index parameter is less than zero. </exception>
            <exception cref="T:System.ArgumentException">The index parameter is greater than or equal to the length of the array parameter. Can also be thrown if the number of elements in the source array is greater than the available space from index to the end of the destination array.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.GetEnumerator">
            <summary>
            Gets an enumerator for iterating through the PIM item collection.
            </summary>
            <returns>The enumerator that can iterate through a collection.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator for iterating through the PIM item collection.
            </summary>
            <returns>A new PimItemCollectionEnumerator.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Dispose">
            <summary>
            Disposes the collection.
            </summary>
            <remarks>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Disables finalization by the garbage collector by a calling GC.SuppressFinalize(this).
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Dispose(System.Boolean)">
            <summary>
            Dispose the collection.
            </summary>
            <param name="disposing">true if called from Dispose(), otherwise false.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.AddIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Adds the sorting property descriptor to the indexes used for a search.
            </summary>
            <param name="property">The PropertyDescriptor to add to the indexes used for searching.</param>
            <remarks>The list must support this method. However, support for this method can be a nonoperation.</remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the list based on a property descriptor and a sort direction.
            </summary>
            <param name="property">The PropertyDescriptor to sort by. </param>
            <param name="direction">One of the ListSortDirection values. </param>
            <exception cref="T:System.NotSupportedException">Thrown when SupportsSearching is false.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when the property descriptor is null.</exception>
            <remarks>
            If items are added or removed, these items are placed in the order of the sort.
            When you call this method, you should raise a ListChanged event with the Reset enumeration.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Finds the PIM item with the matching property description value.
            </summary>
            <param name="property">The PropertyDescriptor to search on.</param>
            <param name="key">The value of the property parameter to search for.</param>
            <returns>The index of the row that has the given PropertyDescriptor.</returns>
            <remarks>This method will select the first row where the value of the property parameter 
            equals the value of the key parameter.</remarks>
            <exception cref="T:System.NotSupportedException">Thrown when SupportSearching is false.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.System#ComponentModel#IBindingList#AddNew">
            <summary>
            Adds a new PIM item to the collection.
            </summary>
            <returns>The new object that just got added.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Removes the property descriptor from the search indexes.
            </summary>
            <param name="property">The PropertyDescriptor to remove from the indexes used for searching. </param>
            <remarks>The list must support this method. However, support for this method can be a nonoperation.</remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.RemoveSort">
            <summary>
            Removes a sort applied with ApplySort.
            </summary>
            <exception cref="T:System.NotSupportedException">This property is not supported.</exception>
            <remarks>This property is supported if SupportsSorting is true; otherwise, this property throws a NotSupportedException.
            It is recommended that when you call RemoveSort, that you raise a ListChanged event with the Reset enumeration.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Add(System.Object)">
            <summary>
            Creates a new PIM item and adds it to the collection. 
            </summary>
            <param name="value">The item to be added.</param>
            <returns>The position into which the new item was inserted</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Contains(System.Object)">
            <summary>
            Gets a value indicating whether the collection contains the supplied PIM item.
            </summary>
            <param name="item">The item to search for.</param>
            <returns> true if the collection contains the item; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.IndexOf(System.Object)">
            <summary>
            Gets the position of the PIM item in the collection.
            </summary>
            <param name="item">The PimItem to find the index of.</param>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when there is any error getting the index of the PimItem.</exception>
            <returns>Returns the index of the PimItem.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Adds a generic object to the PIM item collection, at specific position.
            </summary>
            <remarks>
            <b>Note</b>: Not supported.
            </remarks>
            <param name="index">Where in the collection to insert the PimItem.</param>
            <param name="item">The PimItem to be inserted.</param>
            <exception cref="T:System.NotSupportedException">This method is not supported.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Remove(System.Object)">
            <summary>
            Removes a generic object from the PIM item collection, based on the current sort order.
            </summary>
            <remarks>
            Both <b>Remove</b> and <see cref="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.RemoveAt(System.Int32)"/> throw a <b>NotSupportedException</b> exception 
            if <see cref="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.AllowRemove"/> is <i>false</i>.
            </remarks>
            <param name="item">The PimItem to be removed from the collection.</param>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.ListChanged">
            <summary>
            Occurs when either the collection changes, or when an individual PIM item in the collection changes.
            </summary>
            <remarks>
            Occurs only if the SupportsChangeNotification property is TRUE.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Count">
            <summary>
            Gets the number of PIM Items in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.System#Collections#ICollection#Count">
            <summary>
            Gets the number of elements contained in the ICollection.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ICollection is thread-safe.
            </summary>
            <remarks>
            <b>Note</b>: <b>SyncRoot</b> is supported, but <b>IsSynchronized</b> always returns a value of <b>false</b>.
            </remarks>
            <returns>
            <b>false</b>
            </returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the ICollection.
            </summary>
            <remarks>
            Not supported.
            </remarks>
            <returns>
            <b>null</b>
            </returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.AllowEdit">
            <summary>
            Gets a value indicating whether it is possible to update PIM items in the collection.
            </summary>
            <value>True if it is possible to update the items in the list, otherwise false.</value>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.AllowNew">
            <summary>
            Gets a value indicating whether it is possible to use AddNew to add PIM items to the collection.
            </summary>
            <remarks>
            True if it is possible to add items, otherwise false.
            <para>
            If IList.IsFixedSize or IList.IsReadOnly is true, then AllowNew returns false.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.AllowRemove">
            <summary>
            Gets a value indicating whether it is possible to use either Remove or RemoveAt to remove PIM items from the collection.
            </summary>
            <remarks>
            Returns <i>false</i> if either <see cref="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.IsFixedSize"/> or <see cref="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.IsReadOnly"/> is true.
            If <b>AllowRemove</b> returns <i>false</i>, then <see cref="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Remove(Microsoft.WindowsMobile.PocketOutlook.PimItem)"/> and <see cref="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.RemoveAt(System.Int32)"/> 
            will throw the exception <b>NotSupportedException</b>.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.IsSorted">
            <summary>
            Gets a value indicating whether the items in the collection are sorted.
            </summary>
            <remarks>This property is supported if SupportsSorting is true; otherwise, this property throws a NotSupportedException.
            If IsSorted returns true, items are added or removed in the order of the sort.
            </remarks>
            <exception cref="T:System.NotSupportedException">This property is not supported.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.SortDirection">
            <summary>
            Gets the direction of the sort.
            </summary>
            <remarks>This property is supported if SupportsSorting is true; otherwise, this property throws a NotSupportedException.</remarks>
            <exception cref="T:System.NotSupportedException">This property is not supported.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.SortProperty">
            <summary>
            Gets the sorting property descriptor.
            </summary>
            <remarks>This property is supported if SupportsSorting is true; otherwise, this property throws a NotSupportedException.</remarks>
            <exception cref="T:System.NotSupportedException">This property is not supported.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.SupportsChangeNotification">
            <summary>
            Gets a value indicating whether a ListChanged event is raised when either the list changes, or a PIM item in the list changes.
            </summary>
            <value>true if a ListChanged event is raised when the list changes, or when an item in the list changes; otherwise false.</value>
            <remarks>Objects in the list must notify the list when they change, so the list can raise a ListChanged event.</remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.SupportsSearching">
            <summary>
            Gets a value indicating whether the collection supports searching using the Find method.
            </summary>
            <remarks>true if the list supports searching using the Find method; otherwise, false.</remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.SupportsSorting">
            <summary>
            Gets a value indicating whether the collection supports sorting (that is, whether it is possible to use the Sort and ApplySort methods).
            </summary>
            <remarks>true if the list supports sorting using the Sort and ApplySort methods; otherwise, false.</remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets a PIM item from the collection at the specified index into the collection.
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown when an item is set through the indexer.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.Item(System.Int32)">
            <summary>
            Gets a PIM item at the specified index in the collection.
            </summary>
            <remarks>
            Each time you retrieve a PIM item with the indexer, you get a newly instantiated PIM item.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.PimItemCollectionEnumerator">
            <summary>
            Defines an enumerator for iterating through PIM item collections.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.PimItemCollectionEnumerator.#ctor(Microsoft.WindowsMobile.PocketOutlook.PimItemCollection)">
            <summary>
            The constructor for the PimItemCollectionEnumerator class.
            </summary>
            <param name="collection">Collection that will be enumerated.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.PimItemCollectionEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.PimItemCollectionEnumerator.MoveNext">
            <summary>
            Increments the enumerator to the next PIM item in the collection.
            </summary>
            <returns>TRUE if able to move to the next item. FALSE if it doesn't move to the next item.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.PimItemCollectionEnumerator.Current">
            <summary>
            Gets the current PIM item from the enumerator.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection.PimItemCollectionEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current generic object from the enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.Restrict(System.String)">
            <summary>
            Returns a new AppointmentCollection object that contains only Appointment objects that match a set of criteria, providing a filtered view of a collection of appointments.
            </summary>
            <param name="restriction">
            A string that defines which items to find. 
            The string must contain a Boolean expression that evaluates to TRUE or FALSE for any item. 
                   - Enclose property names between brackets. 
                   - You can combine expressions with AND and OR. 
                   - Comparison operators are the following &quot;&lt;, &lt;=, &gt;, &gt;=, =, &lt;&gt;&quot;
            </param>
            <remarks>
            A restriction match requires that the item include a value for the property.
            For example, if you do not set the e-mail address for a contact, the contact will
            not be found using the restriction string [Email1Address]&lt;&gt;me@microsoft.com, 
            even though the value of Email1Address is not &quot;not me@microsoft.com.&quot;
            </remarks>
            <returns>The Collection of Items matching the Restriction.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.Contains(Microsoft.WindowsMobile.PocketOutlook.Appointment)">
            <summary>
            Checks to see whether a specific Appointment object exists in the AppointmentCollection object.
            </summary>
            <param name="item">The PimItem to be found.</param>
            <returns>True if the item is found in the collection. False if the item is not found in the collection.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.Add(Microsoft.WindowsMobile.PocketOutlook.PimItem)">
            <summary>
            Adds an Appointment object to the AppointmentCollection object.
            </summary>        
            <exception cref="T:System.NotSupportedException">Thrown when AllowNew is false.</exception>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.Remove(Microsoft.WindowsMobile.PocketOutlook.Appointment)">
            <summary>
            Removes a specific Appointment object from the AppointmentCollection object.
            </summary>
            <param name="item">The PimItem to be removed from the collection.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.CopyTo(Microsoft.WindowsMobile.PocketOutlook.Appointment[],System.Int32)">
            <summary>
            Copies an AppointmentCollection object to an array of Appointment objects, beginning at a specific array index.
            </summary>
            <param name="array">The array of items to fill</param>
            <param name="index">The starting position.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The index parameter is less than zero. </exception>
            <exception cref="T:System.ArgumentException">The index parameter is greater than or equal to the length of the array parameter. Can also be thrown if the number of elements in the source array is greater than the available space from index to the end of the destination array.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.AddNew">
            <summary>
            Creates and adds a new Appointment to the AppointmentCollection object.
            </summary>
            <returns>The new PimItem</returns>        
            <exception cref="T:System.NotSupportedException">Thrown when AllowNew is false.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.GetEnumerator">
            <summary>
            Initializes an instance of a new AppointmentCollectionEnumerator enumerator for iterating through the AppointmentCollection object.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.Item(System.Int32)">
            <summary>
            Gets the Appointment from the Appointment collection, with the specified index.
            </summary>
            <remarks>
            Each time you retrieve a Appointment item with the indexer, you get a newly instantiated Appointment item.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.AppointmentCollectionEnumerator">
            <summary>
            An enumerator for iterating through the AppointmentCollection object.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.AppointmentCollectionEnumerator.#ctor(Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection)">
            <summary>
            Initializes an instance of an Appointment collection enumerator.
            </summary>
            <param name="appointmentCollection">Base collection for the enumerator. </param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection.AppointmentCollectionEnumerator.Current">
            <summary>
            Gets the current Appointment.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.AppointmentFolder">
            <summary>
            Defines a folder (the Calendar Folder) for storing the collection of Appointment objects.
            <seealso cref="T:Microsoft.WindowsMobile.PocketOutlook.Folder"/>
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Folder">
            <summary>
            Defines the generic base class for specialized folders containing item collections based on the PimItemCollection class.
            </summary>
            <remarks>Most of the Folder Class is not implemented in v1 because we aren't handling multiple folders</remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Folder.Finalize">
            <summary>
            Overridden. Allows you to free resources and perform other cleanup operations before the folder is reclaimed by the garbage collector.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Folder.Dispose">
            <summary>
            Disposes a folder. Disables finalization by the garbage collector by a calling GC.SuppressFinalize(this). Releases the COM pointer to this folder.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AppointmentFolder.Items">
            <summary>
            Gets the Appointment Items in the AppointmentCollection.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.AppointmentRecurrence">
            <summary>
            Defines a recurrence pattern and applies it to an Appointment.
            </summary>
            <remarks>
            When you create a recurring Appointment, the Recurrence object gets the StartTime, Duration, and EndTime from the Appointment, so you do not need to set them. 
            If you do set these values, your settings override the Appointment settings. If you set all three properties, StartTime, Duration, EndTime — Pocket Outlook ignores the Duration setting and defines the appointment with the StartTime and EndTime settings. If you set any two of these properties and leave the third undefined, Pocket Outlook calculates the undefined setting from the two properties you set.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Recurrence">
            <summary>
            Defines a recurrence pattern that can be applied to Tasks, Appointments, Events, and Meetings.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Recurrence.Clear">
            <summary>
            Removes a recurrence pattern.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Recurrence.RecurrenceTypeChanged">
            <summary>
            Occurs when the recurrence type changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Recurrence.OccurrencesChanged">
            <summary>
            Occurs when the the number of occurences changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Recurrence.IntervalChanged">
            <summary>
            Occurs when the occurrence interval changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Recurrence.DaysOfWeekMaskChanged">
            <summary>
            Occurs when the <b>DayOfWeek</b> property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Recurrence.DayOfMonthChanged">
            <summary>
            Occurs when the <b>DayOfMonth</b> property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Recurrence.MonthOfYearChanged">
            <summary>
            Occurs when the <b>MonthOfYear</b> property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Recurrence.InstanceChanged">
            <summary>
            Occurs when the <b>WeekOfMonth</b> property changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Recurrence.PatternStartDateChanged">
            <summary>
            Occurs when the recurrence pattern’s start date changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Recurrence.PatternEndDateChanged">
            <summary>
            Occurs when the recurrence pattern’s end date changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Recurrence.NoEndDateChanged">
            <summary>
            Occurs when the <b>NoEndDate</b> property changes.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recurrence.RecurrenceType">
            <summary>
            Gets or sets the type of recurrence pattern applied to a Task, Appointment, Event, or Meeting.
            </summary>
            <remarks>
            <b>Note</b>: This property must be set before any of the other <b>Recurrence</b> properties.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recurrence.Occurrences">
            <summary>
            Gets or sets the number of occurrences in the recurrence pattern.
            </summary>
            <remarks>
            Not used if <b>NoEndDate</b> is <b>true</b>.
            <para>To use <b>Occurrences</b>, set <b>NoEndDate</b> to <b>false</b>. After you set <b>Occurrences</b>, <b>PatternEndDate</b> is set automatically when you save the PIM item.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recurrence.Interval">
            <summary>
            Gets or sets the length of time between occurrences.
            </summary>
            <remarks>
            The integer value is in the context of the <b>RecurrenceType</b> enumeration value, which is either days, weeks, months, or month by number. Use the <b>Recurrence.RecurrenceType</b> property to find out. Valid interval values lie between 1 and 999.
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when <b>Interval</b> is used with something other than <b>Daily</b>, <b>Monthly</b>, <b>MonthlyByNumber</b>, and <b>Weekly</b>.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recurrence.DaysOfWeekMask">
            <summary>
            Gets or sets the days of the week of the recurrence.
            </summary>
            <remarks>
            Used with <b>RecurrenceType</b> = <b>MonthlyByNumber</b>, <b>YearlyByNumber</b> and <b>Weekly</b>.
            </remarks>
            <exception cref="T:System.NotSupportedException">DayOfWeek can only be read on MonthNth, YearNth, and Weekly recurrence patterns. Change the RecurrencePattern.RecurrenceType property first.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recurrence.DayOfMonth">
            <summary>
            Gets or sets the day in a month on which an item occurs, from 1 to 31.
            </summary>
            <remarks>
            Used with <b>RecurrenceType</b> = <b>Monthly</b> or <b>Yearly</b>.<para>If there are fewer days in a given month than <b>DayOfMonth</b>, the recurrence occurs on the last day of that month.</para>
            </remarks>
            <exception cref="T:System.NotSupportedException">Thrown when DayOfMonth is not on Monthly and Yearly recurrence patterns. Change the <b>RecurrencePattern.RecurrenceType</b> property first.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recurrence.Instance">
            <summary>
            Gets or sets the week of the month (the <b>WeekOfMonth</b> enumeration value) in which an item occurs, from one to five. 
            </summary>
            <remarks>
            Used with <b>RecurrenceType</b> = <b>MonthByNumber</b> or <b>YearByNumber</b>.<para>The value five is always the last week of the month, regardless of whether the calculated date actually exists.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recurrence.MonthOfYear">
            <summary>
            Gets or sets the month of the year (the <b>Month</b> enumeration value) in which an item occurs, from one to twelve.
            </summary>
            <remarks>
            Used with <b>RecurrenceType</b> = <b>Yearly</b> or <b>YearlyByNumber</b>.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recurrence.PatternStartDate">
            <summary>
            Gets or sets the starting date of the recurrence pattern.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recurrence.PatternEndDate">
            <summary>
            Gets or sets the ending date of the recurrence pattern. 
            </summary>
            <remarks>
            Not used if <b>NoEndDate</b> is <b>true</b>.
            <para>To use <b>PatternEndDate</b>, set <b>NoEndDate</b> to <b>false</b>.
            After you set this property, <b>NumberOfOccurrences</b> is set automatically when you save the PIM item.</para>
            <para>Recurrence duration applies to Appointment items only.</para>
            <para>The time returned is in the time zone of the appointment.</para>
            <para>You must set the date values for PatternStartDate and PatternEndDate. The recurrence pattern's PatternStartDate and PatternEndDate must be equal to the time and date of one of the appointments in the recurrence series. If the appointment is less than a day, then the recurrence pattern PatternStartDate and PatternEndDate must be equal.</para>
            <para>The start and end times for recurring Appointments are set in terms of the Timezone property (PIMPR_TIMEZONE), but the Start and End times for individual Appointments are set and read in terms of the local (device's) Timezone. For example, a recurring Appointment set to recur at noon London time, would occur at 4:00 AM Pacific time.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recurrence.NoEndDate">
            <summary>
            Gets or sets whether the recurrence pattern has an end date. <b>true</b> if the recurrence has no end date; otherwise <b>false</b>. 
            </summary>
            <remarks>
            If you set <b>NoEndDate</b> to <b>true</b>, then <b>PatternEndDate</b> and <b>Occurrences</b> are not used.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentRecurrence.GetOccurrence(System.DateTime)">
            <summary>
            Gets one specific occurence of the recurring Appointment.
            </summary>
            <param name="dateOfOccurrence">The Date where the user wants to find an occurrence.</param>
            <returns>Appointment matching that occurence, 
            or null if there are no occurrences in the specified date.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AppointmentRecurrence.Clear">
            <summary>
            Removes the recurrence pattern from an Appointment.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.AppointmentRecurrence.DurationChanged">
            <summary>
            Occurs when a recurrence pattern's duration changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.AppointmentRecurrence.PatternStartTimeChanged">
            <summary>
            Occurs when a recurrence pattern's start time changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.AppointmentRecurrence.PatternEndTimeChanged">
            <summary>
            Occurs when a recurrence pattern's end time changes.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AppointmentRecurrence.Duration">
            <summary>
            Gets or sets the length of time that the recurrence pattern lasts.
            Duration is supported for Appointments only.
            </summary>
            <remarks>
            If you do not specify the duration, Pocket Outlook calculates it. Duration is ignored if you set both StartTime and EndTime. Duration is used to calculate StartTime or EndTime if one is omitted. Duration cannot be set longer than 31 days.
            </remarks>        
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AppointmentRecurrence.PatternStartTime">
            <summary>
            Gets or sets the start time for a recurring Appointment.
            Pocket Outlook ignores the date and uses only the time. 
            Supported only for Appointments.
            <para>You must set the date values for <b>PatternStartDate</b> and <b>PatternEndDate</b>. 
            The recurrence pattern's <b>PatternStartDate</b> and <b>PatternEndDate</b> must be equal to 
            the time and date of one of the appointments in the recurrence series. 
            If the appointment is less than one day, 
            then the recurrence pattern <b>PatternStartDate</b> and <b>PatternEndDate</b> must be equal.</para>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AppointmentRecurrence.PatternEndTime">
            <summary>
            Gets or sets the end time for a recurring <b>Appointment</b>.
            <para>Supported only for <b>Appointments</b></para>.
            <para>You must set the date values for <b>PatternStartDate</b> and <b>PatternEndDate</b>. 
            The recurrence pattern's <b>PatternStartDate</b> and <b>PatternEndDate</b> must be equal to 
            the time and date of one of the appointments in the recurrence series. 
            If the appointment is less than one day, 
            then the recurrence pattern <b>PatternStartDate</b> and <b>PatternEndDate</b> must be equal.</para>
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Attachment">
            <summary>
            an individual attachment
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Attachment.#ctor(System.String)">
            <summary>
            This default constructor creates an attachment based on the specified fileName.
            The file should exist until the message has been sent or saved.
            </summary>
            <param name="fileName">The fileName should be the complete filename to the file
            that will be attached, including the path to the file.</param>
            <exception cref="T:System.ArgumentException">Will be thrown when the specified name does not
            correspond to a filename on the device.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Attachment.Name">
             <summary>
             Gets or sets the name of the attachment.
             </summary>
            <value>The complete filename to the file that will be attached, 
            including the path to the file.</value>
             <exception cref="T:System.ArgumentException">
             Thrown when the file name is invalid.
             </exception>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection">
            <summary>
            attachments collection for email or mms messages
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Will copy the collection of attachments to an array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins. </param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.CopyTo(Microsoft.WindowsMobile.PocketOutlook.Attachment[],System.Int32)">
            <summary>
            Will copy the collection of attachments to an array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins. </param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.Add(Microsoft.WindowsMobile.PocketOutlook.Attachment)">
            <summary>
            Adds the specified atachment to the collection.
            </summary>
            <param name="attachment">the attachment to add</param>        
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.Remove(Microsoft.WindowsMobile.PocketOutlook.Attachment)">
            <summary>
            Finds and removes the specified attachment from the collection.
            </summary>
            <param name="attachment">attachment to remove</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
             Gets an enumerator to the attachment collection.
            </summary>
            <returns>returns null if an error occurs, otherwise an enumerator.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>The enumerator that can iterate through a collection.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the attachment at the given index on the attachment collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an attachment at a given index in the attachment collection.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes an attachment from the collection.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.Contains(System.Object)">
            <summary>
            Ckecks if the attachment is contained in the collection.
            </summary>
            <param name="value">The attachment to check</param>
            <returns>true if the attachment is contained in the collection, or false otherwise.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.Clear">
            <summary>
            Clears the attachment collection.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.IndexOf(System.Object)">
            <summary>
            Returns the index of the specified attachment.
            </summary>
            <param name="value">The object to locate.</param>
            <returns>The position of the element passed in.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an attachement to the collection.
            </summary>
            <param name="value">The attachment to add to the attacment collection.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.IndexOf(Microsoft.WindowsMobile.PocketOutlook.Attachment)">
            <summary>
            Returns the index of a given attachment.
            </summary>
            <param name="value">The attachment to locate.</param>
            <returns>The index of the attachment in the attachment collection.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.Insert(System.Int32,Microsoft.WindowsMobile.PocketOutlook.Attachment)">
            <summary>
            Inserts an attachment at a given index in the attachment collection.
            </summary>
            <param name="index">Position where the attachment will be inserted.</param>
            <param name="value">The attachment to insert.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.Contains(Microsoft.WindowsMobile.PocketOutlook.Attachment)">
            <summary>
            Returns true if the attachment is contained in the collection.
            </summary>
            <param name="value">The attachment to search for.</param>
            <returns>true if the attachment exists in the attachment collection.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.IsSynchronized">
            <summary>
            Will return false. This is not a synchronized collection.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.Count">
            <summary>
            Gets the number of attachments in the attachment collection.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.SyncRoot">
            <summary>
             Gets the object that can be used to synchronize access to the collection when IsSynchronized is true.
             Since this is not a synchronized collection, it will return null.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.Item(System.Int32)">
            <summary>
            Gets or sets the attachment at a given index.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the List is read-only or not.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Returns the attachment in the List at a specified index.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection.IsFixedSize">
            <summary>
            Returns whether the list has a fixed size or not.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollectionEnumerator">
            <summary>
            The enumerator class for the Recipient Collection.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollectionEnumerator.#ctor(Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection)">
            <summary>
            RecipientCollectionEnumerator constructor
            </summary>
            <param name="collection">The collection to enumerate</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollectionEnumerator.Reset">
            <summary>
            Resets the enumeration
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollectionEnumerator.MoveNext">
            <summary>
            Moves to the next Recipient in the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; 
            false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollectionEnumerator.Current">
            <summary>
            The current recipient in the enumeration
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.AttachmentCollectionEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            The current recipient in the enumeration
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Contact">
            <summary>
            Represents a Contact item in the Contact collection. Contacts represent information records on friends, colleagues, acquaintances, or even a company. They can be used for a variety of purposes (for example, addressing mail, e-mail, and text messages). A sizable Contact collection containing richly populated Contact items, is an enormously powerful database.
            </summary>
            <remarks>
            A <b>Contact</b> is a specialized <b>PimItem</b>. Use the <b>ContactCollection</b> to add and retrieve Contacts to and from the Contact folder.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Contact.SetPicture(System.String)">
            <summary>
            Sets the Contact's picture.
            </summary>
            <param name="fileName">File name to of the picture.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Contact.#ctor">
            <summary>
            Initializes a new instance of the Contact class.
            </summary>
            <overload>
            Initializes a new instance of the Contact class.
            </overload>
            <remarks> The Contact must later be added to a collection by using the ContactCollection.Add() method</remarks>
            <example>Contact c = new Contact();</example>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Contact.#ctor(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Initializes a new instance of the Contact class, that references the item ID of an existing Contact.
            </summary>
            <remark>
            An exception is thrown if the item ID does not belong to a Contact.
            </remark >
            <param name="itemId">Identifier of the item to be retrieved</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Contact.DoBulkRead">
            <summary>
            Does a bulk fetch from the native side of the most used properties.
            It then stores the values in a cache.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Contact.Update">
            <summary>
            Saves the changes made to a Contact item by updating its enty in the Contact collection.
            </summary>
            <remarks>
            To update a Contact, you must specify at least one of the following properties: FirstName, LastName, CompanyName, or FileAs.
            </remarks>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">The contact has not been added to a folder.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Contact.Delete">
            <summary>
            Deletes a Contact item by removing it from the Contact collection.
            </summary>
            
            <remarks>
            <b>Delete</b> throws a <b>Win32Exception</b> exception if the delete operation is not successful.
            For example, this can happen when deleting a <b>Contact</b> item that has not been 
            added to the <see cref="T:Microsoft.WindowsMobile.PocketOutlook.ContactCollection"/>.
            </remarks>
            
            <overload>
            Deletes the Contact from the Contact collection.
            </overload>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Contact.Copy">
            <summary>
            Creates a copy of a Contact item.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when the Contact has not been added to the collection before calling the Copy method.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Contact.ToString">
            <summary>
            Gets the Contact's display name.
            </summary>
            <returns>The Display Name as a string.</returns>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.FirstNameChanged">
            <summary>
            Occurs when the Contact's first name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.GovernmentIdChanged">
            <summary>
            Occurs when the Contact's government ID changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.ManagerChanged">
            <summary>
            Occurs when the Contact's manager's name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.MiddleNameChanged">
            <summary>
            Occurs when the Contact's middle name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.LastNameChanged">
            <summary>
            Occurs when the Contact's last name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.RingToneChanged">
            <summary>
            Occurs when the Contact's ring tone changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.SuffixChanged">
            <summary>
             Occurs when the Contact's suffix changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.TitleChanged">
            <summary>
             Occurs when the Contact's title changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.YomiFirstNameChanged">
            <summary>
            Occurs when the Contact's Japanese phonetic Yomigana rendering of the first name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.YomiLastNameChanged">
            <summary>
            Occurs when the Contact's Japanese phonetic Yomigana rendering of the last name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.FileAsChanged">
            <summary>
            Occurs when the Contact's FileAs name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.NicknameChanged">
             <summary>
            Occurs when the Contact's nick name changes.
             </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.JobTitleChanged">
            <summary>
            Occurs when the Contact's job title changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.CompanyNameChanged">
            <summary>
            Occurs when the Contact's company name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.CustomerIdChanged">
            <summary>
            Occurs when the Contact's customer ID changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.YomiCompanyNameChanged">
            <summary>
            Occurs when the Contact's Japanese phonetic Yomigana rendering of the company name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.DepartmentChanged">
            <summary>
            Occurs when the Contact's department changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.SpouseChanged">
            <summary>
            Occurs when the Contact's spouse's name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.ChildrenChanged">
            <summary>
            Occurs when the Contact's children's names change.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessTelephoneNumberChanged">
            <summary>
            Occurs when the Contact's business telephone number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.Business2TelephoneNumberChanged">
            <summary>
            Occurs when the Contact's second business telepone number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessFaxNumberChanged">
            <summary>
            Occurs when the Contact's business fax number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.CarTelephoneNumberChanged">
            <summary>
            Occurs when the Contact's car telephone number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.CompanyTelephoneNumberChanged">
            <summary>
            Occurs when the Contact's company phone number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeTelephoneNumberChanged">
            <summary>
            Occurs when the Contact's home telephone number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeFaxNumberChanged">
            <summary>
            Occurs when the Contact's home fax number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.Home2TelephoneNumberChanged">
            <summary>
            Occurs when the Contact's second home telephone number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.MobileTelephoneNumberChanged">
            <summary>
            Occurs when the Contact's mobile telephone number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.PagerNumberChanged">
            <summary>
            Occurs when the Contact's pager number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.AssistantTelephoneNumberChanged">
            <summary>
            Occurs when the Contact's assistant telephone number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.RadioTelephoneNumberChanged">
            <summary>
            Occurs when the Contact's radio telephone number changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.AssistantNameChanged">
            <summary>
            Occurs when the Contact's assistant's name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.BodyChanged">
            <summary>
            Occurs when the Contact's note text changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.CategoriesChanged">
            <summary>
            Occurs when the Contact's categories change. 
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.Email1AddressChanged">
            <summary>
            Occurs when the Contact's e-mail address changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.Email2AddressChanged">
            <summary>
            Occurs when the Contact's second e-mail address changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.Email3AddressChanged">
            <summary>
            Occurs when the Contact's third e-mail address changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.IM1AddressChanged">
            <summary>
            Occurs when the Contact's IM address changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.IM2AddressChanged">
            <summary>
            Occurs when the Contact's second IM address changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.IM3AddressChanged">
            <summary>
            Occurs when the Contact's third IM address changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.OfficeLocationChanged">
            <summary>
            Occurs when the Contact's office location changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.WebPageChanged">
            <summary>
            Occurs when the Contact's web page address changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.AccountNameChanged">
            <summary>
            Occurs when the Contact's account name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.AnniversaryChanged">
            <summary>
            Occurs when the Contact's anniversary changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.BirthdayChanged">
            <summary>
            Occurs when the Contact's birthday changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.PictureChanged">
            <summary>
            Occurs when the Contact's picture changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeAddressStreetChanged">
            <summary>
             Occurs when the Contact's home address street name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeAddressCityChanged">
            <summary>
             Occurs when the Contact's home address city name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeAddressStateChanged">
            <summary>
             Occurs when the Contact's home address state name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeAddressPostalCodeChanged">
            <summary>
            Occurs when the Contact's home address postal code changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeAddressCountryChanged">
            <summary>
             Occurs when the Contact's home address country name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessAddressStreetChanged">
            <summary>
             Occurs when the Contact's business address street name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessAddressCityChanged">
            <summary>
             Occurs when the Contact's business address city name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessAddressStateChanged">
            <summary>
             Occurs when the Contact's business address state name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessAddressPostalCodeChanged">
            <summary>
            Occurs when the Contact's business address postal code changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessAddressCountryChanged">
            <summary>
             Occurs when the Contact's business address country name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.OtherAddressStreetChanged">
            <summary>
             Occurs when the Contact's other address street name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.OtherAddressCityChanged">
            <summary>
             Occurs when the Contact's other address city name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.OtherAddressStateChanged">
            <summary>
             Occurs when the Contact's other address state name changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.OtherAddressPostalCodeChanged">
            <summary>
            Occurs when the Contact's other address postal code changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Contact.OtherAddressCountryChanged">
            <summary>
             Occurs when the Contact's other address country name changes.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.FirstName">
            <summary>
            Gets or sets the Contact's first name. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.MiddleName">
            <summary>
            Gets or sets the Contact's middle name. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.LastName">
            <summary>
            Gets or sets the Contact's last name. Maximum length is 1023 characters..
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Suffix">
            <summary>
            Gets or sets the Contact's name suffix. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Title">
            <summary>
            Gets or sets the Contact's title. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.YomiFirstName">
            <summary>
            Gets or sets the Contact's first name rendered in the Japanese Yomigana phonetic system. Maximum length is 1023 characters. Attempting to get or set this property on non-Japanese products causes an exception. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.YomiLastName">
            <summary>
            Gets or sets the Contact's last name rendered in the Japanese Yomigana phonetic system. Maximum length is 1023 characters. Attempting to get or set this property on non-Japanese products causes an exception. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.FileAs">
            <summary>
            Gets or sets the filing string for the Contact. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Nickname">
             <summary>
            gets or sets the Contact's nickname. Maximum length is 1023 characters.
             </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.CustomerId">
            <summary>
            Gets or sets the Contact's customer ID. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.GovernmentId">
            <summary>
            Gets or sets the Contact's government ID. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Manager">
            <summary>
            Gets or sets the Contact's manager's name. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.AccountName">
            <summary>
            Gets or sets the Contact's account name. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.IM1Address">
            <summary>
            Gets or sets the Contact's first IM address. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.IM2Address">
            <summary>
            Gets or sets the Contact's second IM address. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.IM3Address">
            <summary>
            Gets or sets the Contact's third IM address. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.JobTitle">
            <summary>
            Gets or sets the Contact's job title. Maximum length is 1023 characters. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.CompanyName">
            <summary>
            Gets or sets the Contact's company name. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.YomiCompanyName">
            <summary>
            Gets or sets the Contact's company name rendered in the Japanese Yomigana phonetic system. Maximum length is 1023 characters. Attempting to get or set this property on non-Japanese products causes an exception. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Department">
            <summary>
            Gets or sets the Contact's department name. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.OfficeLocation">
            <summary>
            Gets or sets the Contact's office location. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Spouse">
            <summary>
            Gets or sets the Contact's spouse's name. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Children">
            <summary>
            Gets or sets the names of Contact's children. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessTelephoneNumber">
            <summary>
            Gets or sets the Contact's business telephone. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Business2TelephoneNumber">
            <summary>
            Gets or sets the Contact's second business telephone number. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessFaxNumber">
            <summary>
            Gets or sets the Contact's business fax number. Maximum length is 1023 characters..
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.CarTelephoneNumber">
            <summary>
            Gets or sets the Contact's car telephone number. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.CompanyTelephoneNumber">
            <summary>
            Gets or sets the Contact's company telephone number. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeTelephoneNumber">
            <summary>
            Gets or sets the Contact's home telephone number. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Home2TelephoneNumber">
            <summary>
            Gets or sets the Contact's second home telephone number. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeFaxNumber">
            <summary>
            Gets or sets the Contact's home fax number. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.PagerNumber">
            <summary>
            Gets or sets the Contact's pager number. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.AssistantTelephoneNumber">
            <summary>
            Gets or sets the Contact's assistant's telephone number. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.RadioTelephoneNumber">
            <summary>
            Gets or sets the Contact's radio telephone number. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.AssistantName">
            <summary>
            Gets or sets the name of Contact's assistant. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Body">
            <summary>
            Gets or sets the text notes for the Contact. Maximum size is 60 KB. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Categories">
            <summary>
            Gets or sets the categories for Contact. Maximum length is 1023 characters.
            Categories are comma delimenated. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Email1Address">
            <summary>
            Gets or sets the Contact's e-mail address. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Email2Address">
            <summary>
            Gets or sets the Contact's second e-mail address. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Email3Address">
            <summary>
            Gets or sets the Contact's third e-mail address. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.RingTone">
            <summary>
            Gets or sets the custom ring tone for the Contact. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeAddressStreet">
            <summary>
            Gets or sets the street name in the Contact's home address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeAddressCity">
            <summary>
            Gets or sets the city name in the Contact's home address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeAddressState">
            <summary>
            Gets or sets the state name in the Contact's home address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeAddressPostalCode">
            <summary>
            Gets or sets the postal code in the Contact's home address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.HomeAddressCountry">
            <summary>
            Gets or sets the country name in the Contact's home address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessAddressStreet">
            <summary>
            Gets or sets the street name in the Contact's business address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessAddressCity">
            <summary>
            Gets or sets the city name in the Contact's business address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessAddressState">
            <summary>
            Gets or sets the state name in the Contact's business address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessAddressPostalCode">
            <summary>
            Gets or sets the postal code in the Contact's business address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.BusinessAddressCountry">
            <summary>
            Gets or sets the country name in the Contact's business address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.OtherAddressStreet">
            <summary>
            Gets or sets the street name in the Contact's other address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.OtherAddressCity">
            <summary>
            Gets or sets the city name in the Contact's other address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.OtherAddressState">
            <summary>
            Gets or sets the state name in the Contact's other address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.OtherAddressPostalCode">
            <summary>
            Gets or sets the postal code in the Contact's other address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.OtherAddressCountry">
            <summary>
            Gets or sets the country name in the Contact's other address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Anniversary">
            <summary>
            Gets or sets the Contact's wedding anniversary date.
            The date must fall between 1/1/1900 and 12/31/2999 inclusive.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Birthday">
            <summary>
            Gets or sets the Contact's birthdate. The birthdate must fall between 1/1/1900 and 12/31/2999 inclusive.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.MobileTelephoneNumber">
            <summary>
            Gets or sets the Contact's mobile telephone number. Maximum length is 1023 characters.
            This property also represents the SMS address.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.WebPage">
            <summary>
            Gets or sets the address of the Contact's web page. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Contact.Picture">
            <summary>
            Gets the Contact's picture. 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.ContactCollection">
            <summary>
            Represents the collection of Contact items in a Contact folder.
            <seealso cref="T:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection"/>
            </summary>
            <example>
            The code below shows how to data bind a combo box to the list of contacts.
            In this case, the "FileAs" property will be displayed on the combo box,
            the "ItemId" property will be the property used for comboBox1.SelectedValue.
            <code>
            OutlookSession mySession = new OutlookSession();
            this.comboBox1.DataSource = this.mySession.Contacts.Items;
            this.comboBox1.DisplayMember = "FileAs";
            this.comboBox1.ValueMember = "ItemId";
            </code>
            </example>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.Restrict(System.String)">
            <summary>
            Creates a new ContactCollection object that contains only those Contact items that match a set of filter criteria.
            </summary>
            <param name="query">
            A string that defines which items to match.
            This string must contain a Boolean expression that evaluates to either TRUE or FALSE for any item. 
            You must enclose all property names in brackets.
            You can combine expressions with AND and OR. 
            You can use the following comparison operators &quot;&lt;, &lt;=, &gt;, &gt;=, =, &lt;&gt;&quot;
            </param>
            <remarks>
            A restriction match requires that the item include a value for the property.
            For example, if you do not set the e-mail address for a contact, the contact will
            not be found using the restriction string [Email1Address]&lt;&gt;me@microsoft.com, 
            even though the value of Email1Address is not &quot;not me@microsoft.com.&quot;
            </remarks>
            <returns>The Collection of Items matching the Restriction.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.Contains(Microsoft.WindowsMobile.PocketOutlook.Contact)">
            <summary>
            Gets a value indicating whether a Contact item exists in the Contact collection.
            </summary>
            <param name="value"> The Contact to be found.</param>
            <returns>True if the item is found in the Contact collection. False if not Contact.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.Remove(Microsoft.WindowsMobile.PocketOutlook.Contact)">
            <summary>
            Removes the specified Contact item from the Contact collection. Based on the current sort order.
            </summary>
            <param name="item">The Contact item to remove from the Contact collection.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.Add(Microsoft.WindowsMobile.PocketOutlook.PimItem)">
            <summary>
            Inserts a new Contact item into the Contact collection.
            </summary>
            <returns>The index position of the new Contact item in the Contact collection.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.CopyTo(Microsoft.WindowsMobile.PocketOutlook.Contact[],System.Int32)">
            <summary>
            Copies a ContactCollection object to an array of Contact objects, beginning at a specific array index.
            </summary>
            <param name="array">The one-dimensional destination array for the Contact items copied from the Contact collection. The array has zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The index parameter is less than zero. </exception>
            <exception cref="T:System.ArgumentException">The index parameter is greater than or equal to the 
            length of the array parameter. Can also be thrown if the number of elements in the source 
            array is greater than the available space from index to the end of the destination array.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.AddNew">
            <summary>
            Creates a new Contact item, and adds it to the Contact collection.
            </summary>
            <returns>The new Contact item.</returns>
            <remarks>A NotSupportedException will be thrown by the base class if AllowNew is false.</remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.GetEnumerator">
            <summary>
            Gets an enumerator for iterating through the Contact collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.Item(System.Int32)">
            <summary>
            Gets the Contact from the Contact collection, with the specified index.
            </summary>
            <remarks>
            Each time you retrieve a Contact item with the indexer, you get a newly instantiated Contact item.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.ContactCollectionEnumerator">
            <summary>
            Represents the Contact collection enumerator. Used to iterate through the Contact collection.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.ContactCollectionEnumerator.#ctor(Microsoft.WindowsMobile.PocketOutlook.ContactCollection)">
            <summary>
            Initializes a new instance of the ContactCollectionEnumerator class.
            </summary>
            <param name="collection">Base collection for the enumerator.</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.ContactCollectionEnumerator.Current">
            <summary>
            Gets the current Contact item from the Contact collection.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.ContactFolder">
            <summary>
            Defines the Contact folder. This is the container for the Contact collection.
            <seealso cref="T:Microsoft.WindowsMobile.PocketOutlook.Folder"/>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.ContactFolder.Items">
            <summary>
            Gets the Contact collection.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.TaskProperty">
            <summary>     
            This enumeration defines the set of Task object properties.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.Body">
            <summary>         
            The text Notes of the PIM item  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.BodyInk">
            <summary>         
            The ink Notes of the PIM item  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.Categories">
            <summary>         
            A comma-separated list of the categories that apply to this item  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.Complete">
            <summary>         
            A value indicating whether the task has been completed.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.DateCompleted">
            <summary>         
            The date the task was completed.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.DoNotSynchronize">
            <summary>         
            Do not sync the item to Exchange/Outlook  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.DueDate">
            <summary>         
            The due date of the task.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.FolderCategories">
            <summary>         
            A comma-separated list of all the categories that are used in this folder  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.Importance">
            <summary>         
            The importance of the meeting. (Low=0, Normal=1, High=2)  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.IsRecurring">
            <summary>         
            A value indicating whether the appointment or task is recurring.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.Recent">
            <summary>         
            A value indicating whether this PIM item is in the "recently viewed" list  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringDayOfMonth">
            <summary>         
            The day in a month on which an item occurs, from 1 to 31.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringDayOfWeekMask">
            <summary>         
            The days of the week of the recurrence. (Sunday=1, Monday=2, Tuesday=4, etc.)  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringDuration">
            <summary>         
            The duration of the recurrence pattern.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringEndTime">
            <summary>         
            The ending date of the recurrence pattern.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringInstance">
            <summary>         
            The week of the month in which an item occurs, from one to five.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringInterval">
            <summary>         
            The length of time between occurrences.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringMonthOfYear">
            <summary>         
            The month of the year on which an item occurs, from one to twelve.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringNoEnd">
            <summary>         
            A value indicating whether the recurrence pattern has an end.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringOccurrences">
            <summary>         
            The number of occurences  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringPatternEndDate">
            <summary>         
            The ending date of the recurrence pattern.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringPatternStartDate">
            <summary>         
            The starting date of the recurrence pattern.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringRegenerating">
            <summary>         
            A value indicating whether the task recurs after it has been marked as completed.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringStartTime">
            <summary>         
            The starting time of the recurrence pattern.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.RecurringType">
            <summary>         
            The type (frequency) of recurrence:  NoRecurrence = -1, Daily = 0, Weekly = 1, Monthly = 2, MonthByNumber = 3, Yearly = 5, Every Nth Year = 6  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.ReminderOptions">
            <summary>         
            What actions to take when the reminder occurs. (LED=1, Vibrate=2, Dialog=4, Sound=8, Repeat=16)  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.ReminderSet">
            <summary>         
            A value indicating whether the user wants to be reminded of an appointment or task.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.ReminderSoundFile">
            <summary>         
            The path and file name of the sound file to play when the reminder occurs.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.ReminderTime">
            <summary>         
            When a reminder for the task will occur.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.Sensitivity">
            <summary>         
            The sensitivity (Normal = 0, Personal = 1, Private = 2,  Confidential = 3)  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.SourceId">
            <summary>         
            An integer indicating the source, or owning application, of the PIM item.  Zero is the default.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.StartDate">
            <summary>         
            The start date of the task.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.Subject">
            <summary>         
            The subject  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.TaskProperty.TeamTask">
            <summary>         
            A value indicating whether this task is a team task.  
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.ContactProperty">
            <summary>     
            This enumeration defines the set of Contact object properties.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.AccountName">
            <summary>         
            The contact's account name.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.AllCommunicationMethods">
            <summary>         
            All communication methods.  This property is used with the contact chooser dialog, and the WindowsMobile.Forms.ChooseContactDialog.RequiredProperties array.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.AllEmail">
            <summary>         
            All email addresses.  This property is used with the contact chooser dialog, and the WindowsMobile.Forms.ChooseContactDialog.RequiredProperties array.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.AllInstantMessaging">
            <summary>         
            All instant messaging addresses.  This property is used with the contact chooser dialog, and the WindowsMobile.Forms.ChooseContactDialog.RequiredProperties array.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.AllPhone">
            <summary>         
            All telephone numbers.  This property is used with the contact chooser dialog, and the WindowsMobile.Forms.ChooseContactDialog.RequiredProperties array.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.AllPhoneAndSIM">
            <summary>         
            All telephone and SIM numbers.  This property is used with the contact chooser dialog, and the WindowsMobile.Forms.ChooseContactDialog.RequiredProperties array.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.AllTextMessaging">
            <summary>         
            All text messaging addresses.  This property is used with the contact chooser dialog, and the WindowsMobile.Forms.ChooseContactDialog.RequiredProperties array.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.AllVoice">
            <summary>         
            All voice numbers.  This property is used with the contact chooser dialog, and the WindowsMobile.Forms.ChooseContactDialog.RequiredProperties array.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Anniversary">
            <summary>         
            The contact's wedding anniversary date.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.AssistantName">
            <summary>         
            The name of the contact's assistant.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.AssistantTelephoneNumber">
            <summary>         
            The contact's assistant's telephone number.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Birthday">
            <summary>         
            The contact's birthdate.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Body">
            <summary>         
            The text Notes of the PIM item  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.BodyInk">
            <summary>         
            The ink Notes of the PIM item  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Business2TelephoneNumber">
            <summary>         
            The contact's second business telephone number.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.BusinessAddress">
            <summary>         
            The contact's business address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.BusinessAddressCity">
            <summary>         
            The city name in the contact's business address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.BusinessAddressCountry">
            <summary>         
            The country name in the contact's business address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.BusinessAddressPostalCode">
            <summary>         
            The postal code in the contact's business address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.BusinessAddressState">
            <summary>         
            The state name in the contact's business address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.BusinessAddressStreet">
            <summary>         
            The street name in the contact's business address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.BusinessFaxNumber">
            <summary>         
            The contact's business fax number.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.BusinessTelephoneNumber">
            <summary>         
            The contact's business telephone number.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.CarTelephoneNumber">
            <summary>         
            The contact's car telephone number.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Categories">
            <summary>         
            A comma-separated list of the categories that apply to this item  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Children">
            <summary>         
            The names of the contact's children.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.CompanyName">
            <summary>         
            The contact's company name.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.CompanyTelephoneNumber">
            <summary>         
            The contact's company telephone number.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.ContactType">
            <summary>         
            The type of the contact (Device or SIM contact).  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.CustomerId">
            <summary>         
            The contact's customer ID.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Department">
            <summary>         
            The contact's department name.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.DisplayName">
            <summary>         
            The contact's name as it should appear in the user interface  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.DoNotSynchronize">
            <summary>         
            Do not sync the item to Exchange/Outlook  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Email1Address">
            <summary>         
            The contact's e-mail address.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Email2Address">
            <summary>         
            The contact's second e-mail address.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Email3Address">
            <summary>         
            The contact's third e-mail address.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.FileAs">
            <summary>         
            The filing string for the contact.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.FirstName">
            <summary>         
            The contact's first name.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.FolderCategories">
            <summary>         
            A comma-separated list of all the categories that are used in this folder  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.GovernmentId">
            <summary>         
            The contact's government ID.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Home2TelephoneNumber">
            <summary>         
            The contact's second home telephone number.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.HomeAddress">
            <summary>         
            The contact's home address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.HomeAddressCity">
            <summary>         
            The city name in the contact's home address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.HomeAddressCountry">
            <summary>         
            The country name in the contact's home address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.HomeAddressPostalCode">
            <summary>         
            The postal code in the contact's home address  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.HomeAddressState">
            <summary>         
            The state name in the contact's home address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.HomeAddressStreet">
            <summary>         
            The street name in the contact's home address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.HomeFaxNumber">
            <summary>         
            The contact's home fax number.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.HomeTelephoneNumber">
            <summary>         
            The contact's home telephone number.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.IM1Address">
            <summary>         
            The contact's Instant Messaging address.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.IM2Address">
            <summary>         
            The contact's second Instant Messaging address.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.IM3Address">
            <summary>         
            The contact's third Instant Messaging address.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.JobTitle">
            <summary>         
            The contact's job title.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.LastName">
            <summary>         
            The contact's last name.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Manager">
            <summary>         
            The contact's manager's name.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.MiddleName">
            <summary>         
            The contact's middle name.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Mms">
            <summary>         
            The contact's MMS address.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.MobileTelephoneNumber">
            <summary>         
            The contact's mobile telephone number.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Nickname">
            <summary>         
            The contact's nickname.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.OfficeLocation">
            <summary>         
            The contact's office location.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.OtherAddress">
            <summary>         
            The contact's other address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.OtherAddressCity">
            <summary>         
            The city name in the contact's other address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.OtherAddressCountry">
            <summary>         
            The country name in the contact's other address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.OtherAddressPostalCode">
            <summary>         
            The postal code in the contact's other address  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.OtherAddressState">
            <summary>         
            The state name in the contact's other address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.OtherAddressStreet">
            <summary>         
            The street name in the contact's other address.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.PagerNumber">
            <summary>         
            The contact's pager number.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Picture">
            <summary>         
            The contact's picture.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.RadioTelephoneNumber">
            <summary>         
            The contact's radio telephone number.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Recent">
            <summary>         
            A value indicating whether this PIM item is in the "recently viewed" list  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.RingTone">
            <summary>         
            The custom ring tone for the contact.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.SIMPhone">
            <summary>         
            The contact's telephone number stored on the telephone's SIM card.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.SmartProperty">
            <summary>         
            The property id of the property that is used as the primary communication method for the contact.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Sms">
            <summary>         
            The contact's SMS address.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.SourceId">
            <summary>         
            An integer indicating the source, or owning application, of the PIM item.  Zero is the default.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Spouse">
            <summary>         
            The contact's spouse's name.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Suffix">
            <summary>         
            The contact's name suffix.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.Title">
            <summary>         
            The contact's title.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.WebPage">
            <summary>         
            The address of the contact's web page.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.YomiCompanyName">
            <summary>         
            The contact's company name rendered in the Japanese Yomigana phonetic system.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.YomiFileAs">
            <summary>         
            The contact's filing string rendered in the Japanese Yomigana phonetic system.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.YomiFirstName">
            <summary>         
            The contact's first name rendered in the Japanese Yomigana phonetic system.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.ContactProperty.YomiLastName">
            <summary>         
            The contact's last name rendered in the Japanese Yomigana phonetic system.  
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty">
            <summary>     
            This enumeration defines the set of Appointment object properties.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.AllDayEvent">
            <summary>         
            A value indicating whether an appointment occurs as an all day event.    
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.AttendeesCriticalChange">
            <summary>         
            A timestamp indicating that a meeting attendee wants to update the meeting request. Required when sending an updated meeting request back to the meeting owner.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.Body">
            <summary>         
            The text Notes of the PIM item  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.BodyInk">
            <summary>         
            The ink Notes of the PIM item  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.BusyStatus">
            <summary>         
            A contact's availability in the time period spanned by an appointment (Free = 0, Tentative = 1, Busy = 2, OutOfOffice = 3)  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.Categories">
            <summary>         
            A comma-separated list of the categories that apply to this item  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.DoNotSynchronize">
            <summary>         
            Do not sync the item to Exchange/Outlook  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.Duration">
            <summary>         
            The length of an appointment in minutes.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.End">
            <summary>         
            The end time of an appointment.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.FolderCategories">
            <summary>         
            A comma-separated list of all the categories that are used in this folder  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.GlobalObjectId">
            <summary>         
            A unique identifier for the appointment  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.IsRecurring">
            <summary>         
            A value indicating whether the appointment or task is recurring.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.Location">
            <summary>         
            The location of an appointment.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.MeetingOrganizerName">
            <summary>         
            The name of the person who organized the meeting.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.MeetingOwnerCriticalChange">
            <summary>         
            A timestamp indicating that the meeting owner wants to update the meeting request. Required when sending an updated meeting request to attendees. Call Appointment.Update on the appointment before setting either MeetingOwnerCriticalChange or AttendeesCriticalChange.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.MeetingStatus">
            <summary>         
            A value indicating whether an appointment is a meeting. (NotMeeting = 0, Meeting = 1, MeetingAccepted=3, MeetingCanceled=7)  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.Recent">
            <summary>         
            A value indicating whether this PIM item is in the "recently viewed" list  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringDayOfMonth">
            <summary>         
            The day in a month on which an item occurs, from 1 to 31.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringDayOfWeekMask">
            <summary>         
            The days of the week of the recurrence. (Sunday=1, Monday=2, Tuesday=4, etc.)  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringDuration">
            <summary>         
            The duration of the recurrence pattern.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringEndTime">
            <summary>         
            The ending date of the recurrence pattern.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringInstance">
            <summary>         
            The week of the month in which an item occurs, from one to five.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringInterval">
            <summary>         
            The length of time between occurrences.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringMonthOfYear">
            <summary>         
            The month of the year on which an item occurs, from one to twelve.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringNoEnd">
            <summary>         
            A value indicating whether the recurrence pattern has an end.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringOccurrences">
            <summary>         
            The number of occurences  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringPatternEndDate">
            <summary>         
            The ending date of the recurrence pattern.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringPatternStartDate">
            <summary>         
            The starting date of the recurrence pattern.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringStartTime">
            <summary>         
            The starting time of the recurrence pattern.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringTimeZone">
            <summary>         
            The timezone of the appointment as a TIME_ZONE_INFORMATION structure  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.RecurringType">
            <summary>         
            The type (frequency) of recurrence:  NoRecurrence = -1, Daily = 0, Weekly = 1, Monthly = 2, MonthByNumber = 3, Yearly = 5, Every Nth Year = 6  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.ReminderMinutesBeforeStart">
            <summary>         
            The number of minutes a reminder alarm occurs before the start of an appointment.   
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.ReminderOptions">
            <summary>         
            What actions to take when the reminder occurs. (LED=1, Vibrate=2, Dialog=4, Sound=8, Repeat=16)  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.ReminderSet">
            <summary>         
            A value indicating whether the user wants to be reminded of an appointment or task.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.ReminderSoundFile">
            <summary>         
            The path and file name of the sound file to play when the reminder occurs.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.Sensitivity">
            <summary>         
            The sensitivity (Normal = 0, Personal = 1, Private = 2,  Confidential = 3)  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.SourceId">
            <summary>         
            An integer indicating the source, or owning application, of the PIM item.  Zero is the default.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.Start">
            <summary>         
            The start time of an appointment.  
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty.Subject">
            <summary>         
            The subject  
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.EmailAccount">
            <summary>
            Represents a Pocket Outlook e-mail account.
            </summary>
            <remarks>
            One EMailAccount object is instantiated for each e-mail account on the mobile device. An EMailAccount object has a Name property and an associated Transport property. You can use an EMailAccount object's Send method to send e-mail messages.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccount.Send(Microsoft.WindowsMobile.PocketOutlook.EmailMessage)">
            <summary>
            Sends a message using the e-mail account.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccount.#ctor(System.IntPtr,Microsoft.WindowsMobile.PocketOutlook.ItemId,Microsoft.WindowsMobile.PocketOutlook.MailStore)">
            <summary>
            Constructor for an email message.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccount.ThrowExceptionIfNotValid">
            <summary>
            Throws an exception if the COM object that represents the Email account is not valid anymore.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccount.Dispose(System.Boolean)">
            <summary>
            Disposes the Email Account.
            </summary>
            <overload>
            Disposes the Email Account.
            </overload>
            <param name="disposing">true if called from Dispose(), otherwise false.</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailAccount.Transport">
            <summary>
            Gets the name of the transport used for this account ("IMAP", "POP", "ActiveSync", etc.)
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown if the transport name does not exist.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailAccount.Drafts">
            <summary>
            Gets the Drafts folder.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection">
            <summary>
            Defines the set of all e-mail accounts that are currently configured on the mobile device.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.Finalize">
            <summary>
            Finalizer for the EmailAccountCollection class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the e-mail account objects to an array, beginning at a specific array index.
            </summary>
            <param name="array">Array to copy accounts to.</param>
            <param name="index">The array index of the first account.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.CopyTo(Microsoft.WindowsMobile.PocketOutlook.EmailAccount[],System.Int32)">
            <summary>
            Copies an EMailAccountCollection object to an array of EMailAccount objects, beginning at a specific array index.
            </summary>
            <param name="array">The one-dimensional destination Array. 
            The Array must have zero-based indexing.</param>
            <param name="index">The array index of the first account.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.GetEnumerator">
            <summary>
            Gets an enumerator for iterating through the account collection.
            </summary>
            <returns>An enumerator for the account collection.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.Dispose">
            <summary>
            Disposes the account collection.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.Dispose(System.Boolean)">
            <summary>
            Disposes the Email Account Collection.
            </summary>
            <param name="disposing">true if called from Dispose(), otherwise false.</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.Item(System.String)">
            <summary>
            Gets an email account that matches the specified name.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.Item(System.Int32)">
            <summary>
            Gets an email account at the specified index into the e-mail account collection.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the e-mail account collection is thread-safe.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.Count">
            <summary>
            Gets the number of accounts in the e-mail account collection.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollection.SyncRoot">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollectionEnumerator">
            <summary>
            Initializes a new instance of the EmailAccountCollectionEnumerator class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollectionEnumerator.Reset">
            <summary>
            Resets the e-mail account collection enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollectionEnumerator.MoveNext">
            <summary>
            Moves the enumerator's index pointer to the next position.
            </summary>
            <returns>True if the collection does not need to be Reset; otherwise false.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollectionEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current e-mail account from the enumerator.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailAccountCollectionEnumerator.Current">
            <summary>
            Gets the current e-mail account from the enumerator 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.EmailMessage">
            <summary>
            Represents an e-mail message. The EMailMessage class inherits from the Message class.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Message">
            <summary>
            Defines the Item ID and the Recipient, as well as the opening and creation methods for e-mail and text messages.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Message.#ctor">
            <summary>
             This constructs a message that has no native object and has not been sent yet.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Message.#ctor(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Creates a managed message object based on an ItemId.
            </summary>
            <param name="itemId"></param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Message.CreateNativeMessage(System.IntPtr)">
            <summary>
            This function will associate a new Id with a message.
            </summary>
            <param name="mapiFolderPointer">A pointer to the folder that contains this message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Message.OpenNativeMessage">
            <summary>
            Opens the native message. (that has the Id assigned by CreateNativeMessage).
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Message.CacheProperties">
            <summary>
            Caches the general message properties.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Message.SavePropertiesToNativeObject">
            <summary>
            Saves the properties to the native object.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Message.CloseNativeMessage">
            <summary>
            Close the native message.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Message.RemoveId">
            <summary>
            Removes the id 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Message.Finalize">
            <summary>
            Overridden. Allows an Object to attempt to free resources and perform other cleanup operations before the Object is reclaimed by garbage collection. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Message.ItemId">
            <summary>
            Gets the the message’s Item ID.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Message.From">
            <summary>
            Gets the Recipient who sent the message.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Message.Read">
            <summary>
            Gets or sets the read state of the message.
            </summary>
            <value>True if the message has been read.</value>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Message.Received">
            <summary>
            Gets the date that the message was received.
            </summary>
            <remarks>
            Returns a DateTime object if the message was received, and NULL if it was not (that is, if it was just created).
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Message.LastModified">
            <summary>
            Gets the date the message was sent.
            </summary>
            <remarks>
            Returns NULL if the message has just been created, but neither sent nor saved.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Message.CreationType">
            <summary>
            Enumeration that will be used if we want to place restrictions on the operations
            that can be made according to the way a message was intercepted.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Message.CreationType.New">
            <summary>
            Created using Message()
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Message.CreationType.FromItemId">
            <summary>
            Created using Message(ItemId id)
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.#ctor">
            <summary>
            Initializes a new instance of the EmailMessage class. 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.#ctor(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Constructs a managed sms message object based on an existing native object.
            This function is used only for debugging purposes.
            </summary>        
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.Send(Microsoft.WindowsMobile.PocketOutlook.EmailAccount)">
            <summary>
            Sends an email message for the specified e-mail account. 
            </summary>
            <remarks>
            The message will be ready to be sent the next time the device sends messages.
            Depending on the account configuration, the message might not be sent immediately.
            </remarks>
            <param name="account">The account object to use when sending the message</param>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when the message was not constructed through the new EmailMessage() constructor.</exception>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when there is an error attaching files to the message to be sent.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.Send(System.String)">
            <summary>
            Sends an email message for the specified e-mail account, using the name of the account.
            </summary>
            <remarks>
            The message will be ready to be sent the next time the device sends messages.
            Depending on the account configuration, the message might not be sent immediately. 
            </remarks>
            <param name="accountName">The name of the account to use when sending the message</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.SyncRecipients">
            <summary>
            This function will copy the managed cached recipients to the native IMessage object. 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.DefaultInitializer">
            <summary>
            Sets properties that are common to all email messages and sets the message to be valid.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.To">
            <summary>
            Gets the collection of primary recipients (those addressed in the To: line) for the e-mail message.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.CC">
            <summary>
            Gets the collection of carbon-copied recipients for the e-mail message.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.Bcc">
            <summary>
            Gets the collection of blind carbon-copied recipients for the e-mail message.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.Subject">
            <summary>
            Gets the message subject.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.BodyText">
            <summary>
            Gets the message text body.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.Attachments">
            <summary>
            Gets the message's collection of attachments.
            </summary>        
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.Importance">
            <summary>
            Gets or sets the importance level for the message.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailMessage.Sensitivity">
            <summary>
            Gets or sets the sensitivity level assigned to the message. The default value is Normal. 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.EmailMessageFolder">
            <summary>
            Message folder is a folder containing email messages (message collection) and
            sub folders (messagefoldercollection) 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.EmailMessageFolder.ThrowExceptionIfNotValid">
            <summary>
            Throws an exception if the COM object that represents the message folder is not valid anymore.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.EmailMessageFolder.IsValid">
            <summary>
            IsValid will return true if the current account can be used.
            It will return false if the account has beed deleted or is no longer valid.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.ItemId">
            <summary>
            Defines the Item ID, which is used to uniquely identify PIM and Messaging items.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.#ctor">
            <summary>
            The default ItemId Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.#ctor(System.IntPtr)">
            <summary>
            The ItemId constructor.
            </summary>
            <param name="itemPointer"> a pointer to the natively allocated POOM Entry ID.</param>        
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.#ctor(System.IntPtr,System.UInt32)">
            <summary>
            The ItemId constructor.
            </summary>
            <param name="structPointer"> a pointer to the natively allocated MAPI CEENTRYID.</param>
            <param name="size">The size of the structure.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.Finalize">
            <summary>
            Overridden. Allows an ItemID object to attempt to free resources and perform other cleanup operations before being reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ItemId class that references the specified Item ID.
            </summary>
            <param name="id">Object ID</param>
            <remarks>If a user passes in an invalid OID, they will receive an ArgumentException.</remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.op_Equality(Microsoft.WindowsMobile.PocketOutlook.ItemId,Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Defines the comparison operator overload for the ItemId class.
            </summary>
            <param name="x">The first ItemId to be compared.</param>
            <param name="y">The second ItemId to be compared.</param>
            <returns>TRUE if the two ItemIds are equal. FALSE if the ItemIds are not equal.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.op_Inequality(Microsoft.WindowsMobile.PocketOutlook.ItemId,Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Defines the inverse comparison operator overload for the ItemId class. 
            </summary>
            <param name="x">The first ItemId to be compared.</param>
            <param name="y">The second ItemId to be compared.</param>
            <returns>TRUE if the two ItemIds are not equal. TRUE if the ItemIds are equal.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.ToString">
            <summary>
            Returns the item’s object identifier (OID) as a string.
            </summary>
            <returns>
            The string form of the item’s object identifier (OID).
            </returns>
            <remarks>
            Defines the ToString method override for the ItemId class. 
            The value returned by <b>ItemId::ToString</b> is the string equivalent 
            of the value returned by the native Pocket Outlook Object Model API method <b>IItem::get_Oid</b>.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.Equals(System.Object)">
            <summary>
            Defines the equals operator overload for the ItemId class.
            </summary>
            <returns>TRUE if the ItemId equals. FALSE if the ItemId doesn't equal</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.CompareTo(System.Object)">
            <summary>
            Compares this Item Id with another one.
            </summary>.
            <param name="obj">The object to compare</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.GetHashCode">
            <summary>
            Gets the Item ID’s hash code.        
            </summary>
            <returns>Returns a hash code.</returns>
            <remarks>This method can be used to hash algorithms and data structures like a hash table.</remarks>        
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.Dispose">
            <summary>
            Disposes the Item ID.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ItemId.Copy">
            <summary>
            Creates a copy of the Item ID.
            </summary>
            <returns>A copy of the Item ID.</returns>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.ItemId.IDType">
            <summary>
            Needed to identify the type of entry id. NativelyItemIds will refer to both POOM IDs and Managed MAPI IDs.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimItemPtrCache">
            <summary>
            This object will be used by the PoomStore object to cache the IItem COM pointers
            that have been used most recently. This is a fixed size cache. When a given pointer
            gets removed from the cache it is also Released on the native side.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemPtrCache.#ctor">
            <summary>
            Constructor of the PimItem pointer Cache.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemPtrCache.GetItemPtrFromCache(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Returns a pointer to the the native Item object.
            This function checks if the pointer is cached before requesting for it
            on the native side.
            </summary>
            <param name="itemId">id of PimItem object.</param>
            <returns>The native pointer to the PimItem.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemPtrCache.GetItemPtrFromNativeSide(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Returns a pointer to the the native Item object.
            This function P-Invokes through the DoGetItemFromOid function.
            </summary>
            <param name="itemId">id of PimItem object.</param>
            <returns>The native pointer to the PimItem.</returns>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when there is an error getting the PimItem type.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemPtrCache.AddItemPtrToCache(Microsoft.WindowsMobile.PocketOutlook.ItemId,System.IntPtr)">
            <summary>
            Adds a native pointer to the cache based on the objects id.
            </summary>
            <param name="itemId">id of PimItem object.</param>
            <param name="newItemPtr">The native pointer to the PimItem.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemPtrCache.CleanCache">
            <summary>
            Releases the COM pointers that have been cached.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItemPtrCache.ComputeHashPosition(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Computes the position in the cache where the item's information should be stored.
            </summary>
            <param name="itemId">PimItems Id</param>
            <returns> Returns the position in the cache where the items have been stored.</returns>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimItemPtrCache.CacheEntry">
            <summary>
            CacheEntry structure. A row of information in the cache.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PoomStore">
            <summary>
            This object represents the main POOM object.
            </summary>
            <remarks>
            As the root object to POOM data, it provides access to all other objects in the Pocket Outlook hierarchy.
            It provides direct access to newly created items through CreateItem, without having to traverse the object hierarchy
               Provides direct access to existing items through GetItem
               </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PoomStore.#ctor">
            <summary>
            Creates an PoomStore Obect
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PoomStore.Finalize">
            <summary>
            PoomStore deconstructor
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PoomStore.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PoomStore.Contacts">
            <summary>
            gets the Contact Folder object 
            </summary>
            <returns>The Contact Folder Object</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PoomStore.Appointments">
            <summary>
            gets the Calendar Folder object 
            </summary>
            <returns>The Calendar Folder Object</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PoomStore.Tasks">
            <summary>
            gets the Tasks Folder object
            </summary>
            <returns>The Tasks Folder Object</returns>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MailStore">
            <summary>
            This is the main entry point for anything that has to do with MAPI.
            It contains a list email accounts, an sms account and an mms account.    
            </summary>    
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MailStore.#ctor">
            <summary>
            Constructor for a mail store
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MailStore.EmailAccounts">
            <summary>
            A collection of email accounts.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MailStore.SmsAccount">
            <summary>
            The SMS account.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MapiChangeEventArgs">
            <summary>
            Event Args used for MAPI Notifications.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.ChangedEventHandler">
            <summary>
            Event Handler delegate used for MAPI notifications.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MAPIUtilities.ConcatenateRecipients(Microsoft.WindowsMobile.PocketOutlook.RecipientCollection,System.String@,System.String@)">
            <summary>
            Concatenates the names and addresses of recipients on semicolon separated strings. This is the way we pass the data to the native side.
            </summary>
            <param name="recipientCollection">The recipient collection where the values are cached.</param>
            <param name="recipientNames">Returns the string of semicolon separated names.</param>
            <param name="recipientAddresses">Returns the string of semicolon separated addresses.</param>
            <returns>number of recipients of the returned strings.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MAPIUtilities.OpenMessage(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Opens a message given the entry Id.
            </summary>
            <param name="id">Item ID of message</param>
            <returns>The Message that corresponds to the id.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MAPIUtilities.DisposeObject(System.IDisposable)">
            <summary>
            This function checks if the pointer is null before calling Dispose on it.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MAPIUtilities.ThrowCorrectSmsException(System.Int32)">
            <summary>
            Throws the correct type of SmsException based on the error code passed in.
            </summary>
            <param name="errorCode">The returned error code.</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MAPIUtilities.ReferenceCount">
            <summary>
            Checks the number of references that use the MailStore. The MailStore will not do a LogOff unless the ReferenceCount is 0.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.SmsException">
             <summary>
             The exception that is thrown after a failed attempt to send an SMS message (that is, whenever the function <b>SmsMessage.Send</b> fails).
             </summary>
            <remarks>
             An <b>SmsException</b> exception object contains two pieces of information: an error code and an associated error string. The following list contains all of the possible sets of values:
             <list type="bullet">
             <item><description><b>SMS_E_TOOMUCHDATA</b>: This message contains too much text.</description></item>
             <item><description><b>SMS_E_INVALIDDATA</b>: The body of this SMS message contains the wrong type of information.</description></item>
             <item><description><b>SMS_E_PROVIDERSPECIFICBUFFERWRONGSIZE</b>: The provider-specific buffer is the wrong size.</description></item>
             <item><description><b>SMS_E_MSGBARREDBYOPERATOR</b>: Message call barring has been configured by the mobile operator.</description></item>
             <item><description><b>SMS_E_MSGCALLBARRED</b>: Message call barring has been configured on this mobile device.</description></item>
             <item><description><b>SMS_E_SVCNOTSUBSCRIBED</b>: You do not have a subscription to this messaging service.</description></item>
             <item><description><b>SMS_E_UNIDENTIFIEDSUBCRIBER</b>: Your mobile device ID (telephone number) is not registered with this messaging service.</description></item>
             </list>
             </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsException.#ctor(System.Int32,System.String)">
            <summary>
             Initializes a new instance of the SmsException class, using an error code and an error message.
            </summary>
            <param name="errorCode">A win32 exception error code.</param>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsException.#ctor">
            <summary>
             Initializes a new instance of the SmsException class. This is the default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsException.#ctor(System.String)">
            <summary>
             Initializes a new instance of the SmsException class, using an error message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsException.#ctor(System.String,System.Exception)">
            <summary>
             Initializes a new instance of the SmsException class, using an error message and an inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.InvalidSmsRecipientException">
            <summary>
            The exception that is thrown when the Recipient address for the SMS message is invalid.
            </summary>
            <remarks>
            This type of exception is thrown with the following error codes and strings:
            <list type="bullet">
            <item><description><b>SMS_E_INVALIDADDRESS</b>: The destination address is invalid.</description></item>
            <item><description><b>SMS_E_UNASSIGNEDNUMBER</b>: The destination address is currently an unassigned phone number.</description></item>
            <item><description><b>SMS_E_DESTINATIONOUTOFSVC</b>: The message could not be delievered because the destination equipment is out of service.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.InvalidSmsRecipientException.#ctor(System.Int32,System.String)">
            <summary>
             Initializes a new instance of the InvalidSmsRecipientException class, using an error code and an error message.
            </summary>
            <param name="errorCode">A win32 exception error code.</param>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.InvalidSmsRecipientException.#ctor">
            <summary>
            Initializes a new instance of the InvalidSmsRecipientException class. This is the default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.InvalidSmsRecipientException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidSmsRecipientException class, using an error message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.InvalidSmsRecipientException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidSmsRecipientException class, using an error message and an inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.ServiceCenterException">
            <summary>
            The exception that is thrown when an SMSC error occurs while sending the SMS message.
            </summary>
            <remarks>
            This exception is thrown with the following error codes and strings:
            <list type="bullet">
            <item><description><b>SMS_E_UNKNOWNSCADDRESS</b>: The SMSC address is unknown. Verify that the SMSC address is correct, then try again.</description></item>
            <item><description><b>SMS_E_NOSCSUBSCRIPTION</b>: There is no message service center subscription.</description></item>
            <item><description><b>SMS_E_SCBUSY</b>: The message service center is busy.</description></item>
            <item><description><b>SMS_E_TIMEUNAVAILABLE</b>: The SMSC time stamp is currently unavailable.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ServiceCenterException.#ctor(System.Int32,System.String)">
            <summary>
             Initializes a new instance of the ServiceCenterException class, using an error code and an error message.
            </summary>
            <param name="errorCode">A win32 exception error code</param>
            <param name="message">The message of the exception.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ServiceCenterException.#ctor">
            <summary>
             Initializes a new instance of the ServiceCenterException class. This is the default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ServiceCenterException.#ctor(System.String)">
            <summary>
             Initializes a new instance of the ServiceCenterException class, using an error message.
            </summary>
            <param name="message">The message of the exception.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.ServiceCenterException.#ctor(System.String,System.Exception)">
            <summary>
             Initializes a new instance of the ServiceCenterException class, using an error message and an inner exception.
            </summary>
            <param name="message">The message of the exception.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageProperty">
            <summary>
            Specifies a Message property.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageProperty.Body">
            <summary>
            The Message’s text notes.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageProperty.MessageClass">
            <summary>
            The Message’s transport type (for example, SMS). 
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageProperty.Sender">
            <summary>
            The person who sent the message.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageProperty.Subject">
            <summary>
            The Message’s subject.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageCondition">
            <summary>
            A condition statement on a message
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageCondition.#ctor">
            <summary>
            Initializes a new instance of the <b>MessageCondition</b> class.
            </summary>
            <remarks>
            The default constructor. The message property to test is <b>Body</b>, the comparison type is <b>Equal</b>, and is search is case sensitive.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageProperty,System.String)">
            <summary>
            Initializes a new instance of the <b>MessageCondition</b> class; using the specified message property and comparison value. The comparison type is <b>Equal</b>, and the match is case sensitive.
            </summary>
            <param name="property">The message property to test.</param>
            <param name="comparisonValue">The search string containing the match criteria.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageProperty,Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType,System.String)">
            <summary>
            Initializes a new instance of the <b>MessageCondition</b> class; using the specified message property, comparison value, and comparison type. The match is case sensitive.
            </summary>
            <param name="property">The message property to match.</param>
            <param name="comparisonValue">The search string containing the match criteria.</param>
            <param name="comparisonType">The kind of comparison (e.g., equals, contains, etc.).</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageProperty,Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <b>MessageCondition</b> class; using the specified message property, comparison value, comparison type, and <b>CaseSensitive</b> value.
            </summary>
            <param name="property">The message property to match.</param>
            <param name="comparisonValue">The search string containing the match criteria.</param>
            <param name="comparisonType">The kind of comparison (e.g., equals, contains, etc.).</param>
            <param name="caseSensitive">Whether the comparison uses a case sensitive match.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageCondition.Register(System.IntPtr)">
            <summary>
            This method does the actual registration for this object
            </summary>
            <param name="key">key to register under</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageCondition.Property">
            <summary>
            Gets and sets the message property to match with the filter criteria (the comparison value and comparison type).
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType">
            <summary>
            Specifies the ways that you can match message property values with filter criteria used for SMS message interception.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType.Equal">
            <summary>
            The property value is an exact match.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType.NotEqual">
            <summary>
            The property value does not match.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType.Contains">
            <summary>
            Part of the property value contains the filter criteria.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType.StartsWith">
            <summary>
            The property value not only contains the filter criteria, it begins with it. 
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType.EndsWith">
            <summary>
            The property value not only contains the filter criteria, it finishes with it. 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.InterceptionAction">
            <summary>
            Specifies how Pocket Outlook notifies the interception application that an intercepted message has arrived.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.InterceptionAction.Notify">
            <summary>
            Notifies the interception application that an intercepted message has arrived, creates a copy of that message for it to process, then immediately notifies the next interception application that the original intercepted messages has arrived.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.InterceptionAction.NotifyAndDelete">
            <summary>
            Notifies the interception application that an intercepted message has arrived. When this application has finished processing the message, Pocket Outlook deletes the original message.<para><b>Note</b>: Any other interception application that has not already intercepted this message, will not.</para>
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptorEventHandler">
            <summary>
            Represents the method that will handle the <b>MessageReceived</b> event.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptorEventArgs">
            <summary>
            Defines the message data for the <b>MessageReceived</b> event. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptorEventArgs.Message">
            <summary>
            Gets the Message that caused the event.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor">
            <summary>
            Raises an event when an arriving SMS message satisfies the interception rule condition. 
            </summary>
            <remarks>
            When defining an instance of MessageInterceptor that is going to handle the MessageReceived
            event, make sure that the instance is defined globally in the class where the event will be handled.
            If it is defined in a method, it will be up for garbage collection after it goes out of scope. 
            <code>
            public class InterceptorClass
            {
                MessageInterceptor interceptor; // defined globally to class
                private void Form1_Load(object sender, EventArgs e)
                {
                    // MessageInterceptor interceptor;  // This instance will go out of scope if defined here
                    
                    interceptor = new MessageInterceptor(ruleName);
                    interceptor.MessageReceived += new MessageInterceptorEventHandler(interceptor_MessageReceived);
                }
            }
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.VerifyRuleNotRegistered">
            <summary>
            Throws a PocketOutlookException if VerifyRuleNotRegistered is called after 
            calling EnableApplicationLauncher or after
            registering an event handler with the MessageReceived event.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">
            Thrown if VerifyRuleNotRegistered is called after calling EnableApplicationLauncher or after
            registering an event handler with the MessageReceived event.
            </exception>        
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.#ctor">
            <summary>
            Initializes an instance of the <b>MessageInterceptor</b> class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.#ctor(System.String)">
            <summary>
            Initializes an instance of the <b>MessageInterceptor</b> class, using the specified <b>applicationLaunchId</b>.
            </summary>
            <remarks>
            Loads an existing <b>MessageInterceptor</b>. If there is no MessageInterceptor by that name, then an <b>ApplicationLauncherEnableException</b> exception is raised.
            </remarks>
            <param name="applicationLaunchId">Unique identifier for the <b>MessageInterceptor</b>.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes an instance of the <b>MessageInterceptor</b> class, using the specified <b>applicationLaunchId</b>, and a value indicating whether to use the application's form thread to process events.
            </summary>
            <remarks>
            Loads an existing <b>MessageInterceptor</b>. If there is no MessageInterceptor by that name, then an <b>ApplicationLauncherEnableException</b> exception is raised.
            </remarks>
            <param name="applicationLaunchId">Unique identifier for the <b>MessageInterceptor</b>.</param>
            <param name="useFormThread">Use the application's form thread to process events. You need to use this to manipulate UI from within an event. If your application does not contain a form, then this should be set to <b>false</b>.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.InterceptionAction)">
            <summary>
            Initializes an instance of the <b>MessageInterceptor</b> class, using the specified interception action.
            </summary>
            
            <remarks>
            When you use this constructor overload to create a new instance of the <b>MessageInterceptor</b> class, 
            the associated <see cref="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageCondition"/> will be null.
            To work around this, create a new <b>MessageCondition</b> object in a second step.
            See the the following code example for clarification.
            </remarks>
            
            <example>
            <code>
            MessageInterceptor mi = new MessageInterceptor(InterceptionAction.Notify);
            mi.MessageCondition = new MessageCondition();
            mi.MessageCondition.ComparisonValue = "review";
            </code>
            </example>
            
            <param name="interceptionAction">What to do with the intercepted message after successful interception</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.InterceptionAction,System.Boolean)">
            <summary>
            Initializes an instance of the <b>MessageInterceptor</b> class, using the specified interception action, and a value indicating whether to use the application's form thread to process events.
            </summary>
            <param name="interceptionAction">What to do with the intercepted message after successful interception</param>
            <param name="useFormThread">Use the application's Form thread to process events.  You need to use 
            the application's Form thread to be able to manipulate UI from within an event.  If your application
            does not contain a form, then this should be set to false.  </param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.Finalize">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources, and performs other cleanup operations before garbage collection is performed. 
            </summary>
            <remarks>
            The <b>MessageInterceptor</b> class destructor. Disables finalization by the garbage collector by a calling <b>GC.SuppressFinalize(this)</b>. This should be called before <b>Dispose</b>, but if the client forgets to call <b>Dispose</b>, this will finalize the object. If <b>Dispose</b> was already called, then this finalizer has no effect.
            <p><b>Note</b>: For console applications, you must call <b>Dispose</b> if you do not use the form’s window thread to process events.</p>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.IsApplicationLauncherEnabled(System.String)">
            <summary>
            Get a value indicating if a message interceptor application launcher with the given identifier has already been enabled.
            </summary>
            <param name="applicationLaunchId">The ID of the message interceptor.</param>
            <returns><b>true</b> if the application launcher is enabled; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.RefreshRules">
            <summary>
            Causes Pocket Outlook to reload all of the registered interception rules.
            </summary>
            <remarks>
            When an interceptor rule is registered, it will not take affect until you call <b>RefreshRules</b>.
            <p><b>Note</b>: <b>RefreshRules</b> only needs to be called if you create a custom Boolean rule.</p>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.Unregister(System.String)">
            <summary>
            Unregisters the MessageInterceptor with the given identifier name
            </summary>
            <param name="applicationLaunchId">identifier of the MessageInterceptor to unregister</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.Register(System.IntPtr,System.String,System.String)">
            <summary>
            Rules registry looks like this
            HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Inbox\Rules\
            HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Inbox\Rules\(rule identifier)
            Command: (string) Application to launch when rule is satisfied
            Params: (string) Parameters to pass to application
            InterceptionAction: (0,1) 0: Pass message on to next listener, 1: delete message after done. 
            
            HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Inbox\Rules\(rule identifier)\AccountCondition
            @: (string) Category to match on
            CaseSensitive:(0,1) 0: case insensitive, 1: case sensitive
            Value: (string) Value to filter on
            MatchType: (0-7): Category of the match (Equal, NotEqual, Contains, StatsWith, EndsWith)
            
            HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Inbox\Rules\(rule identifier)\MessageCondition
            @: (string) Category to match on
            CaseSensitive:(0,1) 0: case insensitive, 1: case sensitive
            Value: (string) Value to filter on
            MatchType: (0-7): Category of the match (Equal, NotEqual, Contains, StatsWith, EndsWith)
            </summary>
            <param name="root">Pointer to the key that will contain the properties for this interceptor</param>
            <param name="applicationFileName">path to the application exe to launch</param>
            <param name="arguments">arguments to pass to the given application exe</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.Load(System.String)">
            <summary>
            Loads the properties for an existing Message Interceptor.
            </summary>
            <remarks>
            The application that is enabled is for the particular Application Launcher with the associated <b>applicationLaunchId</b>.
            </remarks>
            <param name="applicationLaunchId">The string value of the <b>ApplicationLaunchId</b>.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.Dispose">
            <summary>
            Disposes a <b>MessageInterceptor</b>.
            </summary>
            <remarks>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Disables finalization by the garbage collector by a calling <b>GC.SuppressFinalize(this)</b>.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.DisableApplicationLauncher">
            <summary>
            Disables an already enabled application from launching if an arriving SMS message satisfies the interception rule condition.
            <remarks>
            If your application is still running and consuming the <b>MessageReceived</b> event, then you will still receive the event. 
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.EnableApplicationLauncher(System.String)">
            <summary>
            Enables your current application to be launched if it is not already running when a <b>MessageReceived</b> event is raised, using the string equivalent of the application identifier.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.EnableApplicationLauncher(System.String,System.String)">
            <summary>
            Enables the application specified in <b>applicationFileName</b> to be launched when a <b>MessageReceived</b> event is raised, using the string equivalent of the application identifier and its file name.
            </summary>
            <param name="applicationLaunchId">The string name that identifies the message interceptor.</param>
            <param name="applicationFileName">The string name of the application to launch.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.EnableApplicationLauncher(System.String,System.String,System.String)">
            <summary>
            Enables the application specified in <b>applicationFileName</b> to be launched when a <b>MessageReceived</b> event is raised, using the string equivalent of the application identifier, its file name, and any agruments it might need.
            </summary>
            <param name="applicationLaunchId">The string name that identifies the message interceptor.</param>
            <param name="applicationFileName">The string name of the application to launch.</param>
            <param name="arguments">The string arguments to pass to the application being launched.</param>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.MessageReceived">
            <summary>
            Occurs when an arriving SMS message satisfies the interception rule condition.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.ApplicationLaunchId">
            <summary>
            Gets the identifier of the intercepting application.
            </summary>
            <remarks>
            <b>Note</b>: <b>ApplicationLaunchId</b> can return <b>null</b>. When it does, it means the <b>MessageInterceptor</b> has not been setup for events yet. If so, when <b>EnableApplicationLauncher</b> is called, the value that <b>ApplicationLaunchId</b> returns will be the value set by the user.
            </remarks>        
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.ApplicationToLaunch">
            <summary>
            Gets the name of the intercepting application.
            </summary>
            <remarks>
            The application will be launched if it is not already running. If it is running, although it will not be launched, the event will still be sent to it.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.ApplicationArguments">
            <summary>
            Gets any optional parameters to pass to the intercepting application.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.InterceptionAction">
            <summary>
            Gets or sets the action performed on the intercepted SMS message.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.MessageCondition">
            <summary>
            Gets or sets a value indicating the condition an arriving SMS message must satisfy to be intercepted.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">
            Thrown if <b>MessageCondition</b> is modified after calling <b>EnableApplicationLauncher</b>, or after
            registering an event handler with the <b>MessageReceived</b> event.
            </exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessageInterceptor.AccountCondition">
            <summary>
            Condition on the account that needs to be satisfied for a message to be intercepted
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication">
            <summary>
            Provides automation of the messaging application’s user interface.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.#ctor">
            <summary>
            Private empty constructor.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.DisplayComposeForm(Microsoft.WindowsMobile.PocketOutlook.EmailMessage)">
            <summary>
            Displays a compose form for the specified e-mail message, using the default Account.
            </summary>
            <param name="message">The message that will be displayed.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.DisplayComposeForm(Microsoft.WindowsMobile.PocketOutlook.SmsMessage)">
            <summary>
            Displays a compose form for the specified SMS message.
            </summary>
            <param name="message">The message that will be displayed.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.DisplayComposeForm(Microsoft.WindowsMobile.PocketOutlook.Account)">
            <summary>
            Displays a compose form for the specified Account.
            </summary>
            <param name="account">The account that will be used to send the message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.DisplayComposeForm(Microsoft.WindowsMobile.PocketOutlook.Account,Microsoft.WindowsMobile.PocketOutlook.EmailMessage)">
            <summary>
            Displays a compose form for the specified e-mail message, using the specified Account.
            </summary>
            <param name="account">The account in which to display the message.</param>
            <param name="message">The message that will be displayed.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.DisplayComposeForm(System.String)">
            <summary>
            Displays a compose form for the specified Account name.
            </summary>
            <param name="accountName">The name of the account that will be used to send the message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.DisplayComposeForm(System.String,System.String)">
            <summary>
            Displays a compose form for the specified Account name, along with the names of the primary Recipients.
            </summary>
            <remark>
            Unrecognized parameters are ignored.
            </remark>
            <param name="accountName">The name of the account that will be used to send the message.</param>
            <param name="toAddresses">A semi-colon separated list of the addresses to send the message to.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.DisplayComposeForm(System.String,System.String,System.String)">
            <summary>
            Displays a compose form for the specified Account name, along with the names of the primary Recipients, and the subject.
            </summary>
            <remark>
            Unrecognized parameters are ignored.
            </remark>
            <param name="accountName">The name of the account that will be used to send the message.</param>
            <param name="toAddresses">A semi-colon separated list of the addresses to send the message to.</param>
            <param name="subject">The subject for the message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.DisplayComposeForm(System.String,System.String,System.String,System.String)">
            <summary>
            Displays a compose form for the specified Account name, along with the names of the primary Recipients, the subject, and the message body (text note).
            </summary>
            <remark>
            Unrecognized parameters are ignored.
            </remark>
            <param name="accountName">The name of the account that will be used to send the message.</param>
            <param name="toAddresses">A semi-colon separated list of the addresses to send the message to.</param>
            <param name="subject">The subject for the message.</param>
            <param name="body">The body of the message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.DisplayComposeForm(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            Displays a compose form for the specified Account name, along with the names of the primary Recipients, the subject, the message body (text note), and the file names of the attachments, contained in a string Array.
            </summary>
            <remark>
            Unrecognized parameters are ignored.
            </remark>
            <param name="accountName">The name of the account that will be used to send the message.</param>
            <param name="toAddresses">A semi-colon separated list of the addresses to send the message to.</param>
            <param name="subject">The subject for the message.</param>
            <param name="body">The body of the message.</param>
            <param name="attachments">An array of filenames to attach to the message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.DisplayComposeForm(System.String,System.String,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            Displays a compose form for the specified account name, along with the names of the primary Recipients, the names of the carbon-copied Recipients, the names of the blind carbon-copied Recipients, the subject, the message body (text note), and the file names of the attachments, contained in a string Array.
            </summary>
            <remark>
            Unrecognized parameters are ignored.
            </remark>
            <param name="accountName">The name of the account that will be used to send the message.</param>
            <param name="toAddresses">A semi-colon separated list of the addresses to send the message to.</param>
            <param name="ccAddresses">A semi-colon separated list of the addresses to cc the message to.</param>
            <param name="bccAddresses">A semi-colon separated list of the addresses to bcc the message to.</param>
            <param name="subject">The subject for the message.</param>
            <param name="body">The body of the message.</param>
            <param name="attachments">An array of filenames to attach to the message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.SwitchToAccount(System.String)">
            <summary>
            Gives the focus to the messaging application, then switches to the Account with the supplied name.
            </summary>
            <param name="accountName">The name of the account to display.</param>
            <exception cref="T:System.ArgumentException">Thrown when the accountName could not be matched to an account in the store.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.SwitchToAccount(Microsoft.WindowsMobile.PocketOutlook.Account)">
            <summary>
            Gives the focus to the messaging application, then switches to the Account.
            </summary>
            <param name="account">The account to switch to.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.Synchronize">
            <summary>
            Synchronizes messages for the current Account.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.Synchronize(System.String)">
            <summary>
            Synchronizes messages for the Account with the supplied name.
            </summary>
            <param name="accountName">The name of the account to synchronize.</param>
            <exception cref="T:System.ArgumentException">Thrown when the account name could not be matched to an account in the store.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.Synchronize(Microsoft.WindowsMobile.PocketOutlook.Account)">
            <summary>
            Synchronizes messages for the specified Account.
            </summary>
            <param name="account">The account to synchronize.</param>
            <exception cref="T:System.ArgumentException">Thrown when the account could not be matched to an account in the store.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessagingApplication.ConcatenateAttachments(Microsoft.WindowsMobile.PocketOutlook.AttachmentCollection)">
            <summary>
            Concatenates the names and addresses of attachments into semi-colon separated strings. This is how we pass the data over to the native side.
            </summary>
            <param name="attachments">Attachment collection</param>
            <returns>string containing semicolon separated attachment names.</returns>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingMessageWindow">
            <summary>
            Summary description for MessagingMessageWindow.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingMessageWindow.Create(System.Boolean)">
            <summary>
            This will be called as a separate thread, creating a message window and setting
            up a message pump for that window
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingMessageWindow.MessagePump">
            <summary>
            This will be called as a separate thread, creating a message windows and setting
            up a message pump for those windows
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.OutlookSession">
            <summary>
            Represents the Pocket Outlook application object.
            </summary>
            <remarks>
            As the root object, OutlookSession serves as the entry point into the Pocket Outlook object model.
            <para>The Pocket Outlook object model is the hierarchical set of classes that define PIM and messaging objects and their associated folders. You can access existing PIM and messaging (MAPI) objects by using the function <see>OutlookSession.GetItemByItemID</see>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.OutlookSession.#ctor">
            <summary>
            Initializes a new instance of the OutlookSession class.
            </summary>
            <remarks>
            Creates an OutlookSession object.
            <para><b>Note</b></para>
            <para>
            The managed Pocket Outlook Object Model (POOM) does not pump window messages on its own, 
            the one exception being when the <b>OutlookSession</b> object is being disposed. 
            Therefore, it is recommended that the <b>OutlookSession</b> object be created on the form's main thread, 
            which does pump window messages.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.OutlookSession.Finalize">
            <summary>
            The OutlookSession class destructor.
            </summary>
            <remarks>
            Disposes an OutlookSession object by calling this.Dispose(false). This method overrides System.Object.Finalize.
            <para>Application code should not call this method; an object's Finalize method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the GC.SuppressFinalize method.</para>
            <para>For more information, see <see>cpconFinalizeMethodscDestructors</see>, <see>cpconCleaningUpUnmanagedResources</see>, and <see>cpconOverridingFinalizeMethod</see>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.OutlookSession.Dispose">
            <summary>
            Disposes an OutlookSession.
            </summary>
            <overload>
            Disposes an OutlookSession.
            </overload>
            <remarks>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Disables finalization by the garbage collector by a calling GC.SuppressFinalize(this). 
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.OutlookSession.Dispose(System.Boolean)">
            <summary>
            .Net Design Guidelines Dispose Pattern.
            </summary>
            <param name="disposing">True if called from Dispose().</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.OutlookSession.Contacts">
            <summary>
            Gets the Contact folder, which provides access to the Contact item collection.
            </summary>
            <returns>The Contact folder object.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.OutlookSession.Appointments">
            <summary>
            Gets the Appointment (Calendar) folder, which provides access to the Appointment item collection.
            </summary>
            <returns>The Calendar folder object.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.OutlookSession.Tasks">
            <summary>
            Gets the Tasks folder, which provides access to the Task item collection.
            </summary>
            <returns>The Task folder object.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.OutlookSession.SmsAccount">
            <summary>
            Gets the SMS Account.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.OutlookSession.EmailAccounts">
            <summary>
            Gets the collection of e-mail Accounts.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimPropertyFlags">
            <summary>
            Specifies constants that define custom properties flags.
            </summary>
            <remarks>
            This enumeration allows a bitwise combination of its member values.
            </remarks>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.PimPropertyFlags.Indexed">
            <summary>
            A flag used to index the custom property, which enables faster searching.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.PimPropertyFlags.DoNotReplicate">
            <summary>
            A flag used to prevent the custom property from being copied when the PIM item is copied.
            </summary>
            <remarks>
            If set, prevents the custom property from being copied during a sync operation.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet">
            <summary>
            Defines a set of custom PIM properties.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.#ctor(Microsoft.WindowsMobile.PocketOutlook.PimItem)">
            <summary>
            Constructor - Only PimItem uses this constructor.
            </summary>
            <param name="parent"> PimItem sends this when creating an 
            instance of PimPropertySet</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.GetPropertyType(System.Type)">
            <summary>
            This is a helper method that maps the given System.Type
            to the corresponding value in the private PropertyType enum.
            </summary>
            <param name="type">Type to be mapped</param>
            <returns>The PropertyType value of the input</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.Contains(System.String)">
            <summary>
            Gets a value indicating whether a property with the specified name exists.
            </summary>
            <param name="propertyName">Name of the property</param>
            <returns>True if it exists, false if it does not exist</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.Add(System.String)">
            <summary>
            Creates a custom string property, assigning it the default PIM property flags.
            </summary>
            <remarks>
            The type of the custom property is a String.
            <para>The custom property is not indexed, and it will not be copied when the PIM item is synchronized.</para>
            </remarks>
            <param name="propertyName">Name of the custom property to create.</param>
            <returns><b>true</b> if the custom property was created; <b>false</b> if it already exists.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.Add(System.String,System.Type)">
            <summary>
            Creates a custom property, assigning it the default PIM property flags (property is not indexed, and is replicated on the UI).
            </summary>
            <param name="propertyName">Name of the custom property.</param>
            <param name="type">System.Type type of data.</param>
            <returns>False if the property already exists, true if it is created.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.Add(System.String,System.Type,Microsoft.WindowsMobile.PocketOutlook.PimPropertyFlags)">
            <summary>
            Creates a custom property with the specified flags.
            </summary>
            <param name="propertyName">Name of the custom property.</param>
            <param name="type">Type of data of type System.Type</param>
            <param name="flags">Set one or more flags from the PimPropertyFlags enum</param>
            <returns>False if the property already exists, true if it is created</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.Item(Microsoft.WindowsMobile.PocketOutlook.ContactProperty)">
            <summary>
            Gets or sets a Contact property value.
            </summary>
            <remarks>
            When setting a property value, an ArgumentException will be thrown if the argument type is not supported, or if the property name exists but is of a different type than that of the argument.
            <para>
            When getting a property value, the property with the specified name is retrieved. 
            You must cast the returned object to the appropriate property type.
            If the returned object is to be casted into a value type, you must verify that the 
            returned object is not null before the casting.
            </para>
            </remarks>
            <param name="propertyName">A propertyName from the ContactProperty enumeration.</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.Item(System.String)">
            <summary>
            Gets or sets a generic property value using the string value of the property name.
            </summary>
            <remarks>
            When setting a property value, an ArgumentException will be thrown if the argument type is not supported, or if the property name exists but is of a different type than that of the argument.
            <para>
            When getting a property value, the property with the specified name is retrieved. 
            You must cast the returned object to the appropriate property type.
            If the returned object is to be casted into a value type, you must verify that the 
            returned object is not null before the casting.
            </para>
            </remarks>
            <param name="propertyName">The String name of the property.</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.Item(Microsoft.WindowsMobile.PocketOutlook.TaskProperty)">
            <summary>
            Gets or sets a Task property value.
            </summary>
            <remarks>
            When setting a property value, an ArgumentException will be thrown if the argument type is not supported, or if the property name exists but is of a different type than that of the argument.
            <para>
            When getting a property value, the property with the specified name is retrieved. 
            You must cast the returned object to the appropriate property type.
            If the returned object is to be casted into a value type, you must verify that the 
            returned object is not null before the casting.
            </para>
            </remarks>
            <param name="propertyName">A propertyName from the TaskProperty enumeration.</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.Item(Microsoft.WindowsMobile.PocketOutlook.AppointmentProperty)">
            <summary>
            Gets or sets a Appointment property value.
            </summary>
            <remarks>
            When setting a property value, an ArgumentException will be thrown if the argument type is not supported, or if the property name exists but is of a different type than that of the argument.
            <para>
            When getting a property value, the property with the specified name is retrieved. 
            You must cast the returned object to the appropriate property type.
            If the returned object is to be casted into a value type, you must verify that the 
            returned object is not null before the casting.
            </para>
            <para>
            You must call <see cref="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Update"/> on the appointment 
            before setting either 
            <b>MeetingOwnerCriticalChange</b> or <b>AttendeesCriticalChange</b>.
            </para>
            </remarks>
            <param name="propertyName">A propertyName from the AppointmentProperty Enum</param>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.PropertyType">
            <summary>
            Specifies the list of types used on the native side, along with their values.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.PropertyType.DateTime">
            <summary>
            Time values as a System.DateTime object.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.PimPropertySet.PropertyType.Blob">
            <summary>
            A Byte array.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Recipient">
            <summary>
            Defines a Recipient for Meeting requests and MAPI messages.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Recipient.#ctor(Microsoft.WindowsMobile.PocketOutlook.RecipientCollection,System.String,System.String)">
            <summary>
            Recipient Constructor
            </summary>
            <param name="collection">The collection the recipient should be added to.</param>
            <param name="name">The name of the recipient</param>
            <param name="address">The email address of the recipient.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Recipient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Recipient class, using the Recipient’s name and address.
            </summary>
            
            <remarks>
            For e-mail and Meetings, the string address is a valid e-mail address.
            
            <p>For SMS, the string address is a valid SMS address.</p>
            
            <p>If the <i>name</i> parameter is either null or an empty string, 
            then a <b>Win32Exception</b> exception will be thrown when the <b>Recipient</b> object is 
            added to the Recipient Collection.</p>
            </remarks>
            
            <param name="name">The Recipient’s name.</param>
            <param name="address">The Recipient’s address.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Recipient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Recipient class, using the Recipient’s address.
            </summary>
            
            <remarks>
            For e-mail and Meetings, the string address is a valid e-mail address.
            
            <p>For SMS, the string address is a valid SMS address.</p>
            
            <p>Do not use this constructor overload to create a Recipient for adding to an Appointment's <see cref="T:Microsoft.WindowsMobile.PocketOutlook.RecipientCollection"/>.
            Doing so will throw a <b>Win32Exception</b> exception.</p>
            </remarks>
            
            <param name="address">The address of the recipient.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Recipient.Dispose">
            <summary>
            Disposes the Recipient.
            </summary>
            <remarks>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Disables finalization by the garbage collector by a calling GC.SuppressFinalize(this).
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Recipient.Dispose(System.Boolean)">
            <summary>
            Disposes the Recipient.
            </summary>
            <param name="disposing">true if called from Dispose(), otherwise false.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Recipient.Finalize">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources, and performs other cleanup operations before garbage collection is performed.
            </summary>
            <remarks>
            Overridden.
            <para>
            Disables finalization by the garbage collector by a calling GC.SuppressFinalize(this). Should be called before the Dispose method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Recipient.ToString">
            <summary>
            Gets the Recipient’s name and address. 
            </summary>
            <returns>The string formated 'Name Address'.</returns>
            <remarks>This is the ToString override for the Recipient class. It returns a string consisting of the Recipient’s address appended to the Recipient’s name. For example: "Steve Masters &lt;smasters@tailspintoys.com&gt;".
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Recipient.RemoveInvalidChars(System.String)">
            <summary>
            This function returns a string with no invalid characters from a string.
            </summary>
            <param name="s">String to remove characters from.</param>
            <remarks>For now we just remove semicolons.</remarks>
            <remarks>StringBuilder has better performance than using a string when a string 
            is created character by character.</remarks>
            <returns>String with no invalid characters.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recipient.Name">
            <summary>
            Gets the Recipient’s name.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Recipient.Address">
            <summary>
            Gets the Recipient’s e-mail address (in the case of Meeting requests and e-mail messages), and the Recipient’s SMS address in the case of SMS messages.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.RecipientCollection">
            <summary>
            The collection of Recipients for Meeting requests and MAPI messages.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.RecipientCollection.Add(Microsoft.WindowsMobile.PocketOutlook.Recipient)">
            <summary>
            Adds the specified Recipient to the collection.
            </summary>
            <param name="recipient">The Recipient to add to the collection.</param>
            <returns>The Recipient added to the collection.</returns>
            <remarks>The Recipient returned is a new Recipient that is part of the collection 
            and has the same name and address as the recipient passed to <b>Add</b>.</remarks>
            <exception cref="T:System.ComponentModel.Win32Exception">
            Thrown when the collection is an appointment recipient collection
            and the recipient to add has an empty or null name.
            </exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.RecipientCollection.Remove(System.Int32)">
            <summary>
            Removes the Recipient from the collection, with the specified index.
            </summary>
            <param name="index">Index where to remove the recipient</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.RecipientCollection.Dispose">
            <summary>
            Disposes a RecipientCollection.
            </summary>
            <remarks>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Disables finalization by the garbage collector by calling GC.SuppressFinalize(this).
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.RecipientCollection.Finalize">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources, and performs other cleanup operations before garbage collection is performed.
            </summary>
            <remarks>
             Disables finalization by the garbage collector by a calling GC.SuppressFinalize(this). Should be called before the Dispose method.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.RecipientCollection.GetEnumerator">
            <summary>
            Gets an enumerator for iterating through the Recipient collection.
            </summary>
            <returns>An enumerator for the Recipient collection.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.RecipientCollection.Count">
            <summary>
            Gets the number of Recipient items in the collection
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.RecipientCollection.Item(System.Int32)">
            <summary>
            Gets the Recipient from the Recipient collection, with the specified index.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.RecipientCollectionEnumerator">
            <summary>
            Defines an enumerator for iterating through Recipient collections.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.RecipientCollectionEnumerator.#ctor(Microsoft.WindowsMobile.PocketOutlook.RecipientCollection)">
            <summary>
            Initializes a new instance of the RecipientCollectionEnumerator class.
            </summary>
            <param name="collection">The collection to enumerate</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.RecipientCollectionEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.RecipientCollectionEnumerator.MoveNext">
            <summary>
            Indexes to the next position in the Recipient collection.
            </summary>
            <returns><b>true</b> if another Recipient exists in the collection, otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.RecipientCollectionEnumerator.Current">
            <summary>
            Gets the Recipient currently pointed to by the enumerator.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.RecipientCollectionEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the generic Recipient currently pointed to by the enumerator.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.RecurrenceType">
            <summary>
            Specifies the type of recurrence pattern assigned to Tasks, Appointments, Events, and Meetings. This type indicates when and how often the item repeats.
            </summary>
            <remarks>
            When you create a recurrence pattern, you must also set its recurrence type.
            </remarks>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.RecurrenceType.NoRecurrence">
            <summary>
            There is no recurrence.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.RecurrenceType.Daily">
            <summary>
            The item recurs daily.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.RecurrenceType.Weekly">
            <summary>
            The item recurs weekly.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.RecurrenceType.Monthly">
            <summary>
            The item recurs monthly.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.RecurrenceType.MonthByNumber">
            <summary>
            The item recurs every <i>n</i> months (for example, every third month).
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.RecurrenceType.Yearly">
            <summary>
            The item recurs yearly.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.RecurrenceType.YearByNumber">
            <summary>
            The item recurs every <i>n</i> years (for example, every third year).
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Month">
            <summary>
            Specifies the months (from 1 to 12) used in a recurrence pattern.
            </summary>
            <remarks>
            For use with Yearly recurrences only.
            <para>For example, the <b>MonthOfYear</b> property in a <b>Recurrence</b> object.</para>
            </remarks>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.None">
            <summary>
            The item does not recur monthly.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.January">
            <summary>
            The item recurs in Janurary.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.February">
            <summary>
            The item recurs in Feburary.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.March">
            <summary>
            The item recurs in March.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.April">
            <summary>
            The item recurs in April.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.May">
            <summary>
            The item recurs in May.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.June">
            <summary>
            The item recurs in June.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.July">
            <summary>
            The item recurs in July.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.August">
            <summary>
            The item recurs in August.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.September">
            <summary>
            The item recurs in September.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.October">
            <summary>
            The item recurs in October.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.November">
            <summary>
            The item recurs in November.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Month.December">
            <summary>
            The item recurs in December.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.WeekOfMonth">
            <summary>
            Specifies the weeks of any month (from 1 to 5), used in a recurrence pattern.
            </summary>
            <remarks>
            Used with <b>Month::MonthByNumber</b> and <b>Month::YearByNumber</b>.
            <para><b>Note</b>: The value five is always the last week of the month, regardless of whether the calculated date actually exists.</para>
            </remarks>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.WeekOfMonth.None">
            <summary>
            The item does not recur weekly.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.WeekOfMonth.First">
            <summary>
            The item recurs in the first week of the month.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.WeekOfMonth.Second">
            <summary>
            The item recurs in the second week of the month.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.WeekOfMonth.Third">
            <summary>
            The item recurs in the third week of the month.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.WeekOfMonth.Fourth">
            <summary>
            The item recurs in the fourth week of the month.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.WeekOfMonth.Last">
            <summary>
            The item recurs in the last week of the month.
            </summary>
            <remarks>
            This is always the last week of the month, regardless of whether the calculated date actually exists.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.DaysOfWeek">
            <summary>
            Specifies the days of the week used in a recurrence pattern.
            </summary>
            <remarks>
            This enumeration has a <b>FlagsAttribute</b> attribute that allows a bitwise combination of its member values.
            </remarks>
            <example> The following code example demonstrates how to set a weekly recurrence occuring every Monday and Tuesday.
            <code>
            recurrence.DaysOfWeekMask = DaysOfWeek.Monday | DaysOfWeek.Tuesday; 
            </code>
            </example>    
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.DaysOfWeek.Sunday">
            <summary>
            The item recurs daily on a Sunday. Value = 1.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.DaysOfWeek.Monday">
            <summary>
            The item recurs daily on a Monday. Value = 2.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.DaysOfWeek.Tuesday">
            <summary>
            The item recurs daily on a Tuesday. Value = 4.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.DaysOfWeek.Wednesday">
            <summary>
            The item recurs daily on a Wednesday. Value = 8.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.DaysOfWeek.Thursday">
            <summary>
            The item recurs daily on a Thursday. Value = 16.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.DaysOfWeek.Friday">
            <summary>
            The item recurs daily on a Friday. Value = 32.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.DaysOfWeek.Saturday">
            <summary>
            The item recurs daily on a Saturday. Value = 64.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.SmsAccount">
            <summary>
            Provides access to a Pocket Outlook Short Message Service (SMS) account, the account's SMS folders, and the SMS messages they contain.
            </summary>
            <remarks>
            A mobile device can have only one object instantiated from this class.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsAccount.#ctor(System.IntPtr,Microsoft.WindowsMobile.PocketOutlook.ItemId,Microsoft.WindowsMobile.PocketOutlook.MailStore)">
            <summary>
            Internal constructor of an account.
            </summary>
            <param name="accountPointer">Pointer received by IMAPISession.OpenMsgStore.</param>
            <param name="accountID">Account ID.</param>
            <param name="parentStore">Reference to the MailStore that created this account.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsAccount.Send(Microsoft.WindowsMobile.PocketOutlook.SmsMessage)">
            <summary>
            Sends an message using the account.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsAccount.Dispose(System.Boolean)">
            <summary>
            Disposes the SMS Account.
            </summary>
            <param name="disposing">true if called from Dispose(), otherwise false.</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.SmsAccount.Drafts">
            <summary>
            Gets the special Drafts folder.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.SmsMessage">
            <summary>
            Represents a Short Message Service (SMS) message.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsMessage.#ctor">
            <summary>
            Initializes a new (empty) instance of the <b>SmsMessage</b> class.
            </summary>
            <overload>
            Initializes a new instance of the <b>SmsMessage</b> class.
            </overload>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsMessage.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <b>SmsMessage</b> class, using the specified account. Creates a Recipient collection with the specified Recipient phone number, and fills-in the SMS message’s text body.
            </summary>        
            <param name="recipientPhoneNumber">The Recipient’s phone number.</param>
            <param name="message">The SMS message’s text body.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsMessage.#ctor(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Initializes a new instance of the <b>SmsMessage</b> class, using on an existing native object.
            </summary>        
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsMessage.#ctor(Microsoft.WindowsMobile.PocketOutlook.ItemId,System.Boolean)">
            <summary>
            constructs a managed sms message object based on an existing native object.
            </summary>        
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsMessage.Send">
            <summary>
            Sends the SMS message.
            </summary>
            <example> This sample shows how to send an SMS message to a mobile phone.
            <code>
            public void SmsMessageSend()
            {
               SmsMessage smsMessage = new SmsMessage();
            
               //Set the message body and recipient.
               smsMessage.Body = "Would you like to meet for lunch?";
               smsMessage.To.Add(new Recipient("John Doe", "2065550199"));
               smsMessage.RequestDeliveryReport = true;
            
               //Send the SMS message.
               smsMessage.Send();
            
               return;
            }
            </code>
            </example>
            <remarks>
            Unlike e-mail messages, which are copied to the Sent Items folder when sent, SMS messages are finalized instead.
            </remarks>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.ServiceCenterException">Thrown when there is a service center error sending the SMS message.</exception>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.InvalidSmsRecipientException">Thrown when the SMS recipient is invalid.</exception>        
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when the message was created through <b>SmsMessage(ItemId id) </b>.</exception>
            <exception cref="T:System.ComponentModel.Win32Exception">Thrown when there is no support for SMS.</exception>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.SmsException">Thrown when there are other errors in sending the SMS message.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.SmsMessage.To">
            <summary>
            Gets the collection of recipients for the SMS message. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.SmsMessage.Body">
            <summary>
             Gets the SMS message’s text body.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.SmsMessage.RequestDeliveryReport">
            <summary>
            Gets and sets a value indicating whether a delivery report is requested. <b>true</b> if requested; otherwise <b>false</b>.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.SmsMessageFolder">
            <summary>
            Message folder is a folder containing sms messages (message collection) and
            sub folders (messagefoldercollection) 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsMessageFolder.Finalize">
            <summary>
            Overridden. Allows an Object to attempt to free resources and perform other cleanup operations before the Object is reclaimed by garbage collection. 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.SmsMessageFolder.ThrowExceptionIfNotValid">
            <summary>
            Throws an exception if the COM object that represents the message folder is not valid anymore.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.SmsMessageFolder.Name">
            <summary>
            The name of the folder
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.SmsMessageFolder.IsValid">
            <summary>
            IsValid will return true if the current account can be used.
            It will return false if the account has beed deleted or is no longer valid.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Importance">
            <summary>
            Specifies importance levels (Low, Normal, and High) for Tasks.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Importance.Low">
            <summary>
            Marks low priority Tasks.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Importance.Normal">
            <summary>
            Marks medium (normal) priority Tasks.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Importance.High">
            <summary>
            Marks high priority Tasks.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Task">
            <summary>
            Defines a Task item in the Task collection. Tasks represent actionable "ToDo" items that can be prioritized (using Low, Normal, and High), delegated (by creating a Task Request, or using Assign Task), and completed (using % Complete).
            </summary>
            <remarks>
            A <b>Task</b> is a specialized <b>PimItem</b>. Use the <b>TaskCollection</b> to add and retrieve Tasks to and from the Task folder.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Task.#ctor">
            <summary>
            Initializes a new instance of the Task class, in specified Folder
            </summary>
            <remarks>
            The Task must later be added to a collection with <b>TaskCollection.Add</b>.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Task.#ctor(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Initializes a new instance of the Task class, using the specified item ID.
            </summary>
            <remarks>
            If the item ID does not belong to an existing Task, an <b>ArgumentException</b> exception is thrown.
            </remarks>
            <param name="itemId">Identifier of the item to be retrieved</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Task.Copy">
            <summary>
            Creates an in-memory copy of the Task.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when an item has not been added to the ItemCollection before calling <b>Copy</b>.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Task.Update">
            <summary>
            Updates the Task by saving its changes to the Task collection.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">The task has not been added to a folder.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Task.Delete">
            <summary>
            Deletes a Task item by removing it from the Task collection.
            </summary>
            
            <remarks>
            <b>Delete</b> throws a <b>Win32Exception</b> if the  delete operation is not successful.
            For example, this can happen when deleting a <b>Task</b> item that has not been 
            added to the <see cref="T:Microsoft.WindowsMobile.PocketOutlook.TaskCollection"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Task.ToString">
            <summary>
            Gets the Task's subject line.
            </summary>
            <returns>The subject field as a string.</returns>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.SubjectChanged">
            <summary>
            Occurs when the Task's subject changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.CategoriesChanged">
            <summary>
            Occurs when the Task's assigned categories change.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.SensitivityChanged">
            <summary>
            Occurs when the Task's sensitivity level changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.BodyChanged">
            <summary>
            Occurs when the Task's body text changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderSetChanged">
            <summary>
            Occurs when the Reminder Exists flag changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderLedChanged">
            <summary>
            Occurs when the LED reminder flag changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderVibrateChanged">
            <summary>
            Occurs when the Vibrate flag changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderDialogChanged">
            <summary>
            Occurs when the Task's reminder dialog changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderSoundChanged">
            <summary>
            Occurs when the Task's reminder sound flag changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderRepeatChanged">
            <summary>
            Occurs when the Task's reminder repeat flag changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderSoundFileChanged">
            <summary>
            Occurs when the Task's reminder sound file changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderTimeChanged">
            <summary>
            Occurs when the Task's reminder time changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.StartDateChanged">
            <summary>
            Occurs when the Task's start date changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.DueDateChanged">
            <summary>
            Occurs when the Task's due date changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.CompleteChanged">
            <summary>
            Occurs when the Task's complete flag changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.ImportanceChanged">
            <summary>
            Occurs when the Task's importance level changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Task.TeamTaskChanged">
            <summary>
            Occurs when the team task flag changes.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.Subject">
            <summary>
            Gets or sets the subject for the task. Maximum length is 4095 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.Body">
            <summary>
            Gets or sets the text of the notes accompanying a task. The maximum size is 60 KB.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.Categories">
            <summary>
            Gets or sets the categories assigned to the task. Maximum length is 1023 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.Sensitivity">
            <summary>
            Gets or sets the sensitivity for a task as normal (Normal) or private (Private). The default for a new task is Normal.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderSet">
            <summary>
            Gets or sets whether the user wants to be reminded of a task. The default for this is the user setting in the Calendar and Task Options dialog box.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.TeamTask">
            <summary>
            Gets or sets whether the task is a team task. TRUE if a team task.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.IsRecurring">
            <summary>
            Returns whether the task is recurring. This is useful to use in a restriction string, to quickly discern whether a task recurs.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.Complete">
            <summary>
            Gets or sets whether the task is completed. TRUE if complete, FALSE otherwise. The default is FALSE. 
            TRUE sets the DateCompleted property to the current date on the device.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderSoundFile">
            <summary>
            Gets or sets the path and file name of the sound file to play when the reminder occurs for the Task. This property is valid only if the ReminderSet property is TRUE and the ReminderOptions property includes Sound. The default for this is the current setting for the Calendar application or Alarm1.wav if none. Maximum length is 255 characters.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderLed">
            <summary>
            Gets or sets a value indicating whether the LED (light emitting diode) will activate when the reminder occurs.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderVibrate">
            <summary>
            Gets or sets a value indicating whether the device will vibrate when the reminder occurs.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderDialog">
            <summary>
            Gets or sets a value indicating whether a reminder dialog will appear when the reminder occurs.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderSound">
            <summary>
            Gets or sets a value indicating whether the reminder sound file will play when the reminder occurs.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderRepeat">
            <summary>
            Gets or sets a value indicating whether the reminder sound file will repeat until the reminder is dismissed.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.Importance">
            <summary>
            Gets or sets the importance of the meeting. Allowed settings are ImportanceLow, ImportanceNormal (default), or ImportanceHigh.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.StartDate">
            <summary>
            Gets or sets when the task starts. StartDate must be less than or equal to DateCompleted. Dates must be set between 1/1/1900 and 12/31/2999 inclusive. The default is DATE_NONE.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.DueDate">
            <summary>
            Gets or sets when the task is due. Dates must be set between 1/1/1900 and 12/31/2999 inclusive. The default is DATE_NONE.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.DateCompleted">
            <summary>
            Gets when the task is completed. It gets set to the current date on the device when you set the Complete property. Dates must be set between 1/1/1900 and 12/31/2999 inclusive.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.ReminderTime">
            <summary>
            Gets or sets the number of minutes a reminder occurs before the start of a task. The default for this is the user setting in the Calendar Options dialog box.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Task.RecurrencePattern">
            <summary>
            Gets the Recurrence object for the Task.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.TaskCollection">
            <summary>
            Represents the collection of Task items in the Task folder.
            <seealso cref="T:Microsoft.WindowsMobile.PocketOutlook.PimItemCollection"/>
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.Restrict(System.String)">
            <summary>
            Creates a new TaskCollection object that contains only those Task items that match a set of filter criteria.
            </summary>
            <param name="restriction">
            A string that defines which items to find. 
            The string must contain a Boolean expression that evaluates to <b>true</b> or <b>false</b> for any item. 
                   - Enclose property names between brackets. 
                   - You can combine expressions with AND and OR. 
                   - Comparison operators are the following &quot;&lt;, &lt;=, &gt;, &gt;=, =, &lt;&gt;&quot; 
               </param>
            <remarks>
            A restriction match requires that the item includes a value for the property.
            For example, if you do not set the e-mail address for a contact, the contact will
            not be found using the restriction string [Email1Address]&lt;&gt;me@microsoft.com, 
            even though the value of Email1Address is not &quot;not me@microsoft.com.&quot;
            </remarks>
            <returns>The Collection of Items matching the Restriction.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.Contains(Microsoft.WindowsMobile.PocketOutlook.Task)">
            <summary>
            Gets a value indicating whether a Task item exists in the Task collection.
            </summary>
            <param name="item">The PimItem to be found.</param>
            <returns>True if the item is found in the collection. False if the item is not found in the collection.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.Remove(Microsoft.WindowsMobile.PocketOutlook.Task)">
            <summary>
            Removes the specified Task item from the Task collection.
            </summary>
            <remarks>
            Based on the current sort order.
            </remarks>
            <param name="item">The PimItem to be removed from the collection.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.Add(Microsoft.WindowsMobile.PocketOutlook.PimItem)">
            <summary>
            Inserts a new Task item into the Task collection.
            </summary>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.CopyTo(Microsoft.WindowsMobile.PocketOutlook.Task[],System.Int32)">
            <summary>
            Copies a TaskCollection object to an array of Task objects, beginning at a specific array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">The index parameter is less than zero. </exception>
            <exception cref="T:System.ArgumentException">The index parameter is greater than or equal to the length 
            of the array parameter. Can also be thrown if the number of elements in the source array is 
            greater than the available space from index to the end of the destination array.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.AddNew">
            <summary>
            Creates a new Task item, and adds it to the Task collection. 
            </summary>        
            <returns>The new PimItem</returns>
            <remarks>A NotSupportedException will be thrown by the base class if AllowNew is false.</remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.GetEnumerator">
            <summary>
            Gets an enumerator for iterating through the Task collection.
            </summary>
            <returns>The Enumerated collection</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.Item(System.Int32)">
            <summary>
            Gets the Task from the Task collection, with the specified index.
            </summary>
            <remarks>
            Each time you retrieve a Task item with the indexer, you get a newly instantiated Task item.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.TaskCollectionEnumerator">
            <summary>
            Represents the Task collection enumerator. Used to iterate through the Task collection.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.TaskCollectionEnumerator.#ctor(Microsoft.WindowsMobile.PocketOutlook.TaskCollection)">
            <summary>
            Initializes a new instance of the <b>TaskCollectionEnumerator</b> class.
            </summary>
            <param name="collection">The collection to enumerate on.</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.TaskCollection.TaskCollectionEnumerator.Current">
            <summary>
            Gets the current Task item from the Task collection.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.TaskFolder">
            <summary>
            Defines the Task folder. This is container for the Task collection.
            <seealso cref="T:Microsoft.WindowsMobile.PocketOutlook.Folder"/>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.TaskFolder.Items">
            <summary>
            Gets the Task from the Task collection, with the specified index.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.TaskRecurrence">
            <summary>
            Defines a recurrence pattern and applies it to a Task.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.TaskRecurrence.Clear">
            <summary>
            Removes the recurrence pattern from a Task.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.TaskRecurrence.Skip">
            <summary>
            Disregards this occurrence of the Task.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Utilities.UnNullifyString(System.String)">
            <summary>
            UnNullifyString returns an empty string if the specified string is null, otherwise it just
            returns the specified string.
            </summary>
            <param name="tmpString"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Utilities.GetDateTimeTypesAndValues">
            <summary>
            Gets the DateTime types, values and methods required to manipulate the
            Kind of a DateTime. It does not do anything if the values have been cached
            or if the current version of the compact framework does not include the
            Kind property.
            </summary>
            <returns>
            DateTimeVersion.NetCFv1 if we are running on a version of the CF that does not have the 
            "DateTime.Kind" property, DateTimeVersion.NetCFv2 otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Utilities.SpecifyDateTimeKind(System.DateTime,Microsoft.WindowsMobile.PocketOutlook.Utilities.DateTimeKindv2)">
            <summary>
            Similar to .Net CF v2 DateTime.SpecifyKind, but it does not do
            anything if we're are running on .NetCF v1.
            </summary>
            <param name="dateTime">A DateTime object.</param>
            <param name="dateTimeKind">One of the DateTimeKindEx values.</param>
            <returns>
            A new DateTime object that represents the same time as the specified DateTime, 
            but is designated in either local time, Coordinated Universal Time (UTC), 
            or neither, as indicated by the specified DateTimeKindEx value. 
            </returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Utilities.ReferenceCount">
            <summary>
            Used to check the number of references that use the MailStore.
            The PoomStore will not do a LogOff unless the ReferenceCount is 0.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Utilities.DateTimeKindv2">
            <summary>
            Used to represent the different kinds of dates that can be
            specified on .Net CF v2. I did not name it DateTimeKind so
            that it does not get confused with DateTime.DateTimeKind.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Utilities.DateTimeVersion">
            <summary>
            Let's us know what DateTime version we are using.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">
            <summary>
            The generic exception that is thrown by Microsoft.WindowsMobile.PocketOutlook methods.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException.#ctor">
            <summary>
            Initializes a new instance of the PocketOutlookException class. 
            <remarks>The default Constructor.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PocketOutlookException class, using the specified exception message string.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the PocketOutlookException class, using the specified exception message string, and specified inner exception.
            </summary>
            <param name="message">Exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
    </members>
</doc>
